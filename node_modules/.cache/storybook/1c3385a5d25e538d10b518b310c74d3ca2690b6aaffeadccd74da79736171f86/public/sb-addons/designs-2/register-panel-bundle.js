try{
(() => {
  var __defProp = Object.defineProperty;
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: !0 });
  };

  // <define:process.env>
  var define_process_env_default = { NODE_ENV: "development", NODE_PATH: [], STORYBOOK: "true", PUBLIC_URL: ".", CHROMATIC_BASE_URL: "https://www.chromatic.com" };

  // global-externals:react
  var react_exports = {};
  __export(react_exports, {
    Children: () => Children,
    Component: () => Component,
    Fragment: () => Fragment,
    Profiler: () => Profiler,
    PureComponent: () => PureComponent,
    StrictMode: () => StrictMode,
    Suspense: () => Suspense,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: () => __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    act: () => act,
    cloneElement: () => cloneElement,
    createContext: () => createContext,
    createElement: () => createElement,
    createFactory: () => createFactory,
    createRef: () => createRef,
    default: () => react_default,
    forwardRef: () => forwardRef,
    isValidElement: () => isValidElement,
    lazy: () => lazy,
    memo: () => memo,
    startTransition: () => startTransition,
    unstable_act: () => unstable_act,
    useCallback: () => useCallback,
    useContext: () => useContext,
    useDebugValue: () => useDebugValue,
    useDeferredValue: () => useDeferredValue,
    useEffect: () => useEffect,
    useId: () => useId,
    useImperativeHandle: () => useImperativeHandle,
    useInsertionEffect: () => useInsertionEffect,
    useLayoutEffect: () => useLayoutEffect,
    useMemo: () => useMemo,
    useReducer: () => useReducer,
    useRef: () => useRef,
    useState: () => useState,
    useSyncExternalStore: () => useSyncExternalStore,
    useTransition: () => useTransition,
    version: () => version
  });
  var react_default = __REACT__, { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, act, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, startTransition, unstable_act, useCallback, useContext, useDebugValue, useDeferredValue, useEffect, useId, useImperativeHandle, useInsertionEffect, useLayoutEffect, useMemo, useReducer, useRef, useState, useSyncExternalStore, useTransition, version } = __REACT__;

  // global-externals:storybook/theming
  var theming_default = __STORYBOOK_THEMING__, { CacheProvider, ClassNames, Global, ThemeProvider, background, color, convert, create, createCache, createGlobal, createReset, css, darken, ensure, ignoreSsrWarning, isPropValid, jsx, keyframes, lighten, styled, themes, typography, useTheme, withTheme } = __STORYBOOK_THEMING__;

  // global-externals:storybook/internal/components
  var components_default = __STORYBOOK_COMPONENTS__, { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, ClipboardCode, Code, DL, Div, DocumentWrapper, EmptyTabContent, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, Img, LI, Link, ListItem, Loader, Modal, OL, P, Placeholder, Pre, ProgressSpinner, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset } = __STORYBOOK_COMPONENTS__;

  // node_modules/@lit/reactive-element/css-tag.js
  var t = window, e = t.ShadowRoot && (t.ShadyCSS === void 0 || t.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype, s = Symbol(), n = /* @__PURE__ */ new WeakMap(), o = class {
    constructor(t5, e8, n9) {
      if (this._$cssResult$ = !0, n9 !== s) throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
      this.cssText = t5, this.t = e8;
    }
    get styleSheet() {
      let t5 = this.o, s6 = this.t;
      if (e && t5 === void 0) {
        let e8 = s6 !== void 0 && s6.length === 1;
        e8 && (t5 = n.get(s6)), t5 === void 0 && ((this.o = t5 = new CSSStyleSheet()).replaceSync(this.cssText), e8 && n.set(s6, t5));
      }
      return t5;
    }
    toString() {
      return this.cssText;
    }
  }, r = (t5) => new o(typeof t5 == "string" ? t5 : t5 + "", void 0, s), i = (t5, ...e8) => {
    let n9 = t5.length === 1 ? t5[0] : e8.reduce(((e9, s6, n10) => e9 + ((t6) => {
      if (t6._$cssResult$ === !0) return t6.cssText;
      if (typeof t6 == "number") return t6;
      throw Error("Value passed to 'css' function must be a 'css' function result: " + t6 + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
    })(s6) + t5[n10 + 1]), t5[0]);
    return new o(n9, t5, s);
  }, S = (s6, n9) => {
    e ? s6.adoptedStyleSheets = n9.map(((t5) => t5 instanceof CSSStyleSheet ? t5 : t5.styleSheet)) : n9.forEach(((e8) => {
      let n10 = document.createElement("style"), o7 = t.litNonce;
      o7 !== void 0 && n10.setAttribute("nonce", o7), n10.textContent = e8.cssText, s6.appendChild(n10);
    }));
  }, c = e ? (t5) => t5 : (t5) => t5 instanceof CSSStyleSheet ? ((t6) => {
    let e8 = "";
    for (let s6 of t6.cssRules) e8 += s6.cssText;
    return r(e8);
  })(t5) : t5;

  // node_modules/@lit/reactive-element/reactive-element.js
  var s2, e2 = window, r2 = e2.trustedTypes, h = r2 ? r2.emptyScript : "", o2 = e2.reactiveElementPolyfillSupport, n2 = { toAttribute(t5, i7) {
    switch (i7) {
      case Boolean:
        t5 = t5 ? h : null;
        break;
      case Object:
      case Array:
        t5 = t5 == null ? t5 : JSON.stringify(t5);
    }
    return t5;
  }, fromAttribute(t5, i7) {
    let s6 = t5;
    switch (i7) {
      case Boolean:
        s6 = t5 !== null;
        break;
      case Number:
        s6 = t5 === null ? null : Number(t5);
        break;
      case Object:
      case Array:
        try {
          s6 = JSON.parse(t5);
        } catch {
          s6 = null;
        }
    }
    return s6;
  } }, a = (t5, i7) => i7 !== t5 && (i7 == i7 || t5 == t5), l = { attribute: !0, type: String, converter: n2, reflect: !1, hasChanged: a }, d = "finalized", u = class extends HTMLElement {
    constructor() {
      super(), this._$Ei = /* @__PURE__ */ new Map(), this.isUpdatePending = !1, this.hasUpdated = !1, this._$El = null, this._$Eu();
    }
    static addInitializer(t5) {
      var i7;
      this.finalize(), ((i7 = this.h) !== null && i7 !== void 0 ? i7 : this.h = []).push(t5);
    }
    static get observedAttributes() {
      this.finalize();
      let t5 = [];
      return this.elementProperties.forEach(((i7, s6) => {
        let e8 = this._$Ep(s6, i7);
        e8 !== void 0 && (this._$Ev.set(e8, s6), t5.push(e8));
      })), t5;
    }
    static createProperty(t5, i7 = l) {
      if (i7.state && (i7.attribute = !1), this.finalize(), this.elementProperties.set(t5, i7), !i7.noAccessor && !this.prototype.hasOwnProperty(t5)) {
        let s6 = typeof t5 == "symbol" ? Symbol() : "__" + t5, e8 = this.getPropertyDescriptor(t5, s6, i7);
        e8 !== void 0 && Object.defineProperty(this.prototype, t5, e8);
      }
    }
    static getPropertyDescriptor(t5, i7, s6) {
      return { get() {
        return this[i7];
      }, set(e8) {
        let r4 = this[t5];
        this[i7] = e8, this.requestUpdate(t5, r4, s6);
      }, configurable: !0, enumerable: !0 };
    }
    static getPropertyOptions(t5) {
      return this.elementProperties.get(t5) || l;
    }
    static finalize() {
      if (this.hasOwnProperty(d)) return !1;
      this[d] = !0;
      let t5 = Object.getPrototypeOf(this);
      if (t5.finalize(), t5.h !== void 0 && (this.h = [...t5.h]), this.elementProperties = new Map(t5.elementProperties), this._$Ev = /* @__PURE__ */ new Map(), this.hasOwnProperty("properties")) {
        let t6 = this.properties, i7 = [...Object.getOwnPropertyNames(t6), ...Object.getOwnPropertySymbols(t6)];
        for (let s6 of i7) this.createProperty(s6, t6[s6]);
      }
      return this.elementStyles = this.finalizeStyles(this.styles), !0;
    }
    static finalizeStyles(i7) {
      let s6 = [];
      if (Array.isArray(i7)) {
        let e8 = new Set(i7.flat(1 / 0).reverse());
        for (let i8 of e8) s6.unshift(c(i8));
      } else i7 !== void 0 && s6.push(c(i7));
      return s6;
    }
    static _$Ep(t5, i7) {
      let s6 = i7.attribute;
      return s6 === !1 ? void 0 : typeof s6 == "string" ? s6 : typeof t5 == "string" ? t5.toLowerCase() : void 0;
    }
    _$Eu() {
      var t5;
      this._$E_ = new Promise(((t6) => this.enableUpdating = t6)), this._$AL = /* @__PURE__ */ new Map(), this._$Eg(), this.requestUpdate(), (t5 = this.constructor.h) === null || t5 === void 0 || t5.forEach(((t6) => t6(this)));
    }
    addController(t5) {
      var i7, s6;
      ((i7 = this._$ES) !== null && i7 !== void 0 ? i7 : this._$ES = []).push(t5), this.renderRoot !== void 0 && this.isConnected && ((s6 = t5.hostConnected) === null || s6 === void 0 || s6.call(t5));
    }
    removeController(t5) {
      var i7;
      (i7 = this._$ES) === null || i7 === void 0 || i7.splice(this._$ES.indexOf(t5) >>> 0, 1);
    }
    _$Eg() {
      this.constructor.elementProperties.forEach(((t5, i7) => {
        this.hasOwnProperty(i7) && (this._$Ei.set(i7, this[i7]), delete this[i7]);
      }));
    }
    createRenderRoot() {
      var t5;
      let s6 = (t5 = this.shadowRoot) !== null && t5 !== void 0 ? t5 : this.attachShadow(this.constructor.shadowRootOptions);
      return S(s6, this.constructor.elementStyles), s6;
    }
    connectedCallback() {
      var t5;
      this.renderRoot === void 0 && (this.renderRoot = this.createRenderRoot()), this.enableUpdating(!0), (t5 = this._$ES) === null || t5 === void 0 || t5.forEach(((t6) => {
        var i7;
        return (i7 = t6.hostConnected) === null || i7 === void 0 ? void 0 : i7.call(t6);
      }));
    }
    enableUpdating(t5) {
    }
    disconnectedCallback() {
      var t5;
      (t5 = this._$ES) === null || t5 === void 0 || t5.forEach(((t6) => {
        var i7;
        return (i7 = t6.hostDisconnected) === null || i7 === void 0 ? void 0 : i7.call(t6);
      }));
    }
    attributeChangedCallback(t5, i7, s6) {
      this._$AK(t5, s6);
    }
    _$EO(t5, i7, s6 = l) {
      var e8;
      let r4 = this.constructor._$Ep(t5, s6);
      if (r4 !== void 0 && s6.reflect === !0) {
        let h3 = (((e8 = s6.converter) === null || e8 === void 0 ? void 0 : e8.toAttribute) !== void 0 ? s6.converter : n2).toAttribute(i7, s6.type);
        this._$El = t5, h3 == null ? this.removeAttribute(r4) : this.setAttribute(r4, h3), this._$El = null;
      }
    }
    _$AK(t5, i7) {
      var s6;
      let e8 = this.constructor, r4 = e8._$Ev.get(t5);
      if (r4 !== void 0 && this._$El !== r4) {
        let t6 = e8.getPropertyOptions(r4), h3 = typeof t6.converter == "function" ? { fromAttribute: t6.converter } : ((s6 = t6.converter) === null || s6 === void 0 ? void 0 : s6.fromAttribute) !== void 0 ? t6.converter : n2;
        this._$El = r4, this[r4] = h3.fromAttribute(i7, t6.type), this._$El = null;
      }
    }
    requestUpdate(t5, i7, s6) {
      let e8 = !0;
      t5 !== void 0 && (((s6 = s6 || this.constructor.getPropertyOptions(t5)).hasChanged || a)(this[t5], i7) ? (this._$AL.has(t5) || this._$AL.set(t5, i7), s6.reflect === !0 && this._$El !== t5 && (this._$EC === void 0 && (this._$EC = /* @__PURE__ */ new Map()), this._$EC.set(t5, s6))) : e8 = !1), !this.isUpdatePending && e8 && (this._$E_ = this._$Ej());
    }
    async _$Ej() {
      this.isUpdatePending = !0;
      try {
        await this._$E_;
      } catch (t6) {
        Promise.reject(t6);
      }
      let t5 = this.scheduleUpdate();
      return t5 != null && await t5, !this.isUpdatePending;
    }
    scheduleUpdate() {
      return this.performUpdate();
    }
    performUpdate() {
      var t5;
      if (!this.isUpdatePending) return;
      this.hasUpdated, this._$Ei && (this._$Ei.forEach(((t6, i8) => this[i8] = t6)), this._$Ei = void 0);
      let i7 = !1, s6 = this._$AL;
      try {
        i7 = this.shouldUpdate(s6), i7 ? (this.willUpdate(s6), (t5 = this._$ES) === null || t5 === void 0 || t5.forEach(((t6) => {
          var i8;
          return (i8 = t6.hostUpdate) === null || i8 === void 0 ? void 0 : i8.call(t6);
        })), this.update(s6)) : this._$Ek();
      } catch (t6) {
        throw i7 = !1, this._$Ek(), t6;
      }
      i7 && this._$AE(s6);
    }
    willUpdate(t5) {
    }
    _$AE(t5) {
      var i7;
      (i7 = this._$ES) === null || i7 === void 0 || i7.forEach(((t6) => {
        var i8;
        return (i8 = t6.hostUpdated) === null || i8 === void 0 ? void 0 : i8.call(t6);
      })), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(t5)), this.updated(t5);
    }
    _$Ek() {
      this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = !1;
    }
    get updateComplete() {
      return this.getUpdateComplete();
    }
    getUpdateComplete() {
      return this._$E_;
    }
    shouldUpdate(t5) {
      return !0;
    }
    update(t5) {
      this._$EC !== void 0 && (this._$EC.forEach(((t6, i7) => this._$EO(i7, this[i7], t6))), this._$EC = void 0), this._$Ek();
    }
    updated(t5) {
    }
    firstUpdated(t5) {
    }
  };
  u[d] = !0, u.elementProperties = /* @__PURE__ */ new Map(), u.elementStyles = [], u.shadowRootOptions = { mode: "open" }, o2?.({ ReactiveElement: u }), ((s2 = e2.reactiveElementVersions) !== null && s2 !== void 0 ? s2 : e2.reactiveElementVersions = []).push("1.6.3");

  // node_modules/lit-html/lit-html.js
  var t2, i2 = window, s3 = i2.trustedTypes, e3 = s3 ? s3.createPolicy("lit-html", { createHTML: (t5) => t5 }) : void 0, o3 = "$lit$", n3 = `lit$${(Math.random() + "").slice(9)}$`, l2 = "?" + n3, h2 = `<${l2}>`, r3 = document, u2 = () => r3.createComment(""), d2 = (t5) => t5 === null || typeof t5 != "object" && typeof t5 != "function", c2 = Array.isArray, v = (t5) => c2(t5) || typeof t5?.[Symbol.iterator] == "function", a2 = `[ 	
\f\r]`, f = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g, _ = /-->/g, m = />/g, p = RegExp(`>|${a2}(?:([^\\s"'>=/]+)(${a2}*=${a2}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g"), g = /'/g, $ = /"/g, y = /^(?:script|style|textarea|title)$/i, w = (t5) => (i7, ...s6) => ({ _$litType$: t5, strings: i7, values: s6 }), x = w(1), b = w(2), T = Symbol.for("lit-noChange"), A2 = Symbol.for("lit-nothing"), E = /* @__PURE__ */ new WeakMap(), C = r3.createTreeWalker(r3, 129, null, !1);
  function P2(t5, i7) {
    if (!Array.isArray(t5) || !t5.hasOwnProperty("raw")) throw Error("invalid template strings array");
    return e3 !== void 0 ? e3.createHTML(i7) : i7;
  }
  var V = (t5, i7) => {
    let s6 = t5.length - 1, e8 = [], l5, r4 = i7 === 2 ? "<svg>" : "", u3 = f;
    for (let i8 = 0; i8 < s6; i8++) {
      let s7 = t5[i8], d3, c3, v2 = -1, a3 = 0;
      for (; a3 < s7.length && (u3.lastIndex = a3, c3 = u3.exec(s7), c3 !== null); ) a3 = u3.lastIndex, u3 === f ? c3[1] === "!--" ? u3 = _ : c3[1] !== void 0 ? u3 = m : c3[2] !== void 0 ? (y.test(c3[2]) && (l5 = RegExp("</" + c3[2], "g")), u3 = p) : c3[3] !== void 0 && (u3 = p) : u3 === p ? c3[0] === ">" ? (u3 = l5 ?? f, v2 = -1) : c3[1] === void 0 ? v2 = -2 : (v2 = u3.lastIndex - c3[2].length, d3 = c3[1], u3 = c3[3] === void 0 ? p : c3[3] === '"' ? $ : g) : u3 === $ || u3 === g ? u3 = p : u3 === _ || u3 === m ? u3 = f : (u3 = p, l5 = void 0);
      let w3 = u3 === p && t5[i8 + 1].startsWith("/>") ? " " : "";
      r4 += u3 === f ? s7 + h2 : v2 >= 0 ? (e8.push(d3), s7.slice(0, v2) + o3 + s7.slice(v2) + n3 + w3) : s7 + n3 + (v2 === -2 ? (e8.push(void 0), i8) : w3);
    }
    return [P2(t5, r4 + (t5[s6] || "<?>") + (i7 === 2 ? "</svg>" : "")), e8];
  }, N = class _N {
    constructor({ strings: t5, _$litType$: i7 }, e8) {
      let h3;
      this.parts = [];
      let r4 = 0, d3 = 0, c3 = t5.length - 1, v2 = this.parts, [a3, f2] = V(t5, i7);
      if (this.el = _N.createElement(a3, e8), C.currentNode = this.el.content, i7 === 2) {
        let t6 = this.el.content, i8 = t6.firstChild;
        i8.remove(), t6.append(...i8.childNodes);
      }
      for (; (h3 = C.nextNode()) !== null && v2.length < c3; ) {
        if (h3.nodeType === 1) {
          if (h3.hasAttributes()) {
            let t6 = [];
            for (let i8 of h3.getAttributeNames()) if (i8.endsWith(o3) || i8.startsWith(n3)) {
              let s6 = f2[d3++];
              if (t6.push(i8), s6 !== void 0) {
                let t7 = h3.getAttribute(s6.toLowerCase() + o3).split(n3), i9 = /([.?@])?(.*)/.exec(s6);
                v2.push({ type: 1, index: r4, name: i9[2], strings: t7, ctor: i9[1] === "." ? H : i9[1] === "?" ? L : i9[1] === "@" ? z : k });
              } else v2.push({ type: 6, index: r4 });
            }
            for (let i8 of t6) h3.removeAttribute(i8);
          }
          if (y.test(h3.tagName)) {
            let t6 = h3.textContent.split(n3), i8 = t6.length - 1;
            if (i8 > 0) {
              h3.textContent = s3 ? s3.emptyScript : "";
              for (let s6 = 0; s6 < i8; s6++) h3.append(t6[s6], u2()), C.nextNode(), v2.push({ type: 2, index: ++r4 });
              h3.append(t6[i8], u2());
            }
          }
        } else if (h3.nodeType === 8) if (h3.data === l2) v2.push({ type: 2, index: r4 });
        else {
          let t6 = -1;
          for (; (t6 = h3.data.indexOf(n3, t6 + 1)) !== -1; ) v2.push({ type: 7, index: r4 }), t6 += n3.length - 1;
        }
        r4++;
      }
    }
    static createElement(t5, i7) {
      let s6 = r3.createElement("template");
      return s6.innerHTML = t5, s6;
    }
  };
  function S2(t5, i7, s6 = t5, e8) {
    var o7, n9, l5, h3;
    if (i7 === T) return i7;
    let r4 = e8 !== void 0 ? (o7 = s6._$Co) === null || o7 === void 0 ? void 0 : o7[e8] : s6._$Cl, u3 = d2(i7) ? void 0 : i7._$litDirective$;
    return r4?.constructor !== u3 && ((n9 = r4?._$AO) === null || n9 === void 0 || n9.call(r4, !1), u3 === void 0 ? r4 = void 0 : (r4 = new u3(t5), r4._$AT(t5, s6, e8)), e8 !== void 0 ? ((l5 = (h3 = s6)._$Co) !== null && l5 !== void 0 ? l5 : h3._$Co = [])[e8] = r4 : s6._$Cl = r4), r4 !== void 0 && (i7 = S2(t5, r4._$AS(t5, i7.values), r4, e8)), i7;
  }
  var M = class {
    constructor(t5, i7) {
      this._$AV = [], this._$AN = void 0, this._$AD = t5, this._$AM = i7;
    }
    get parentNode() {
      return this._$AM.parentNode;
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    u(t5) {
      var i7;
      let { el: { content: s6 }, parts: e8 } = this._$AD, o7 = ((i7 = t5?.creationScope) !== null && i7 !== void 0 ? i7 : r3).importNode(s6, !0);
      C.currentNode = o7;
      let n9 = C.nextNode(), l5 = 0, h3 = 0, u3 = e8[0];
      for (; u3 !== void 0; ) {
        if (l5 === u3.index) {
          let i8;
          u3.type === 2 ? i8 = new R(n9, n9.nextSibling, this, t5) : u3.type === 1 ? i8 = new u3.ctor(n9, u3.name, u3.strings, this, t5) : u3.type === 6 && (i8 = new Z(n9, this, t5)), this._$AV.push(i8), u3 = e8[++h3];
        }
        l5 !== u3?.index && (n9 = C.nextNode(), l5++);
      }
      return C.currentNode = r3, o7;
    }
    v(t5) {
      let i7 = 0;
      for (let s6 of this._$AV) s6 !== void 0 && (s6.strings !== void 0 ? (s6._$AI(t5, s6, i7), i7 += s6.strings.length - 2) : s6._$AI(t5[i7])), i7++;
    }
  }, R = class _R {
    constructor(t5, i7, s6, e8) {
      var o7;
      this.type = 2, this._$AH = A2, this._$AN = void 0, this._$AA = t5, this._$AB = i7, this._$AM = s6, this.options = e8, this._$Cp = (o7 = e8?.isConnected) === null || o7 === void 0 || o7;
    }
    get _$AU() {
      var t5, i7;
      return (i7 = (t5 = this._$AM) === null || t5 === void 0 ? void 0 : t5._$AU) !== null && i7 !== void 0 ? i7 : this._$Cp;
    }
    get parentNode() {
      let t5 = this._$AA.parentNode, i7 = this._$AM;
      return i7 !== void 0 && t5?.nodeType === 11 && (t5 = i7.parentNode), t5;
    }
    get startNode() {
      return this._$AA;
    }
    get endNode() {
      return this._$AB;
    }
    _$AI(t5, i7 = this) {
      t5 = S2(this, t5, i7), d2(t5) ? t5 === A2 || t5 == null || t5 === "" ? (this._$AH !== A2 && this._$AR(), this._$AH = A2) : t5 !== this._$AH && t5 !== T && this._(t5) : t5._$litType$ !== void 0 ? this.g(t5) : t5.nodeType !== void 0 ? this.$(t5) : v(t5) ? this.T(t5) : this._(t5);
    }
    k(t5) {
      return this._$AA.parentNode.insertBefore(t5, this._$AB);
    }
    $(t5) {
      this._$AH !== t5 && (this._$AR(), this._$AH = this.k(t5));
    }
    _(t5) {
      this._$AH !== A2 && d2(this._$AH) ? this._$AA.nextSibling.data = t5 : this.$(r3.createTextNode(t5)), this._$AH = t5;
    }
    g(t5) {
      var i7;
      let { values: s6, _$litType$: e8 } = t5, o7 = typeof e8 == "number" ? this._$AC(t5) : (e8.el === void 0 && (e8.el = N.createElement(P2(e8.h, e8.h[0]), this.options)), e8);
      if (((i7 = this._$AH) === null || i7 === void 0 ? void 0 : i7._$AD) === o7) this._$AH.v(s6);
      else {
        let t6 = new M(o7, this), i8 = t6.u(this.options);
        t6.v(s6), this.$(i8), this._$AH = t6;
      }
    }
    _$AC(t5) {
      let i7 = E.get(t5.strings);
      return i7 === void 0 && E.set(t5.strings, i7 = new N(t5)), i7;
    }
    T(t5) {
      c2(this._$AH) || (this._$AH = [], this._$AR());
      let i7 = this._$AH, s6, e8 = 0;
      for (let o7 of t5) e8 === i7.length ? i7.push(s6 = new _R(this.k(u2()), this.k(u2()), this, this.options)) : s6 = i7[e8], s6._$AI(o7), e8++;
      e8 < i7.length && (this._$AR(s6 && s6._$AB.nextSibling, e8), i7.length = e8);
    }
    _$AR(t5 = this._$AA.nextSibling, i7) {
      var s6;
      for ((s6 = this._$AP) === null || s6 === void 0 || s6.call(this, !1, !0, i7); t5 && t5 !== this._$AB; ) {
        let i8 = t5.nextSibling;
        t5.remove(), t5 = i8;
      }
    }
    setConnected(t5) {
      var i7;
      this._$AM === void 0 && (this._$Cp = t5, (i7 = this._$AP) === null || i7 === void 0 || i7.call(this, t5));
    }
  }, k = class {
    constructor(t5, i7, s6, e8, o7) {
      this.type = 1, this._$AH = A2, this._$AN = void 0, this.element = t5, this.name = i7, this._$AM = e8, this.options = o7, s6.length > 2 || s6[0] !== "" || s6[1] !== "" ? (this._$AH = Array(s6.length - 1).fill(new String()), this.strings = s6) : this._$AH = A2;
    }
    get tagName() {
      return this.element.tagName;
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    _$AI(t5, i7 = this, s6, e8) {
      let o7 = this.strings, n9 = !1;
      if (o7 === void 0) t5 = S2(this, t5, i7, 0), n9 = !d2(t5) || t5 !== this._$AH && t5 !== T, n9 && (this._$AH = t5);
      else {
        let e9 = t5, l5, h3;
        for (t5 = o7[0], l5 = 0; l5 < o7.length - 1; l5++) h3 = S2(this, e9[s6 + l5], i7, l5), h3 === T && (h3 = this._$AH[l5]), n9 || (n9 = !d2(h3) || h3 !== this._$AH[l5]), h3 === A2 ? t5 = A2 : t5 !== A2 && (t5 += (h3 ?? "") + o7[l5 + 1]), this._$AH[l5] = h3;
      }
      n9 && !e8 && this.j(t5);
    }
    j(t5) {
      t5 === A2 ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, t5 ?? "");
    }
  }, H = class extends k {
    constructor() {
      super(...arguments), this.type = 3;
    }
    j(t5) {
      this.element[this.name] = t5 === A2 ? void 0 : t5;
    }
  }, I = s3 ? s3.emptyScript : "", L = class extends k {
    constructor() {
      super(...arguments), this.type = 4;
    }
    j(t5) {
      t5 && t5 !== A2 ? this.element.setAttribute(this.name, I) : this.element.removeAttribute(this.name);
    }
  }, z = class extends k {
    constructor(t5, i7, s6, e8, o7) {
      super(t5, i7, s6, e8, o7), this.type = 5;
    }
    _$AI(t5, i7 = this) {
      var s6;
      if ((t5 = (s6 = S2(this, t5, i7, 0)) !== null && s6 !== void 0 ? s6 : A2) === T) return;
      let e8 = this._$AH, o7 = t5 === A2 && e8 !== A2 || t5.capture !== e8.capture || t5.once !== e8.once || t5.passive !== e8.passive, n9 = t5 !== A2 && (e8 === A2 || o7);
      o7 && this.element.removeEventListener(this.name, this, e8), n9 && this.element.addEventListener(this.name, this, t5), this._$AH = t5;
    }
    handleEvent(t5) {
      var i7, s6;
      typeof this._$AH == "function" ? this._$AH.call((s6 = (i7 = this.options) === null || i7 === void 0 ? void 0 : i7.host) !== null && s6 !== void 0 ? s6 : this.element, t5) : this._$AH.handleEvent(t5);
    }
  }, Z = class {
    constructor(t5, i7, s6) {
      this.element = t5, this.type = 6, this._$AN = void 0, this._$AM = i7, this.options = s6;
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    _$AI(t5) {
      S2(this, t5);
    }
  };
  var B = i2.litHtmlPolyfillSupport;
  B?.(N, R), ((t2 = i2.litHtmlVersions) !== null && t2 !== void 0 ? t2 : i2.litHtmlVersions = []).push("2.8.0");
  var D = (t5, i7, s6) => {
    var e8, o7;
    let n9 = (e8 = s6?.renderBefore) !== null && e8 !== void 0 ? e8 : i7, l5 = n9._$litPart$;
    if (l5 === void 0) {
      let t6 = (o7 = s6?.renderBefore) !== null && o7 !== void 0 ? o7 : null;
      n9._$litPart$ = l5 = new R(i7.insertBefore(u2(), t6), t6, void 0, s6 ?? {});
    }
    return l5._$AI(t5), l5;
  };

  // node_modules/lit-element/lit-element.js
  var l3, o4;
  var s4 = class extends u {
    constructor() {
      super(...arguments), this.renderOptions = { host: this }, this._$Do = void 0;
    }
    createRenderRoot() {
      var t5, e8;
      let i7 = super.createRenderRoot();
      return (t5 = (e8 = this.renderOptions).renderBefore) !== null && t5 !== void 0 || (e8.renderBefore = i7.firstChild), i7;
    }
    update(t5) {
      let i7 = this.render();
      this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t5), this._$Do = D(i7, this.renderRoot, this.renderOptions);
    }
    connectedCallback() {
      var t5;
      super.connectedCallback(), (t5 = this._$Do) === null || t5 === void 0 || t5.setConnected(!0);
    }
    disconnectedCallback() {
      var t5;
      super.disconnectedCallback(), (t5 = this._$Do) === null || t5 === void 0 || t5.setConnected(!1);
    }
    render() {
      return T;
    }
  };
  s4.finalized = !0, s4._$litElement$ = !0, (l3 = globalThis.litElementHydrateSupport) === null || l3 === void 0 || l3.call(globalThis, { LitElement: s4 });
  var n4 = globalThis.litElementPolyfillSupport;
  n4?.({ LitElement: s4 });
  ((o4 = globalThis.litElementVersions) !== null && o4 !== void 0 ? o4 : globalThis.litElementVersions = []).push("3.3.3");

  // node_modules/@lit/reactive-element/decorators/property.js
  var i3 = (i7, e8) => e8.kind === "method" && e8.descriptor && !("value" in e8.descriptor) ? { ...e8, finisher(n9) {
    n9.createProperty(e8.key, i7);
  } } : { kind: "field", key: Symbol(), placement: "own", descriptor: {}, originalKey: e8.key, initializer() {
    typeof e8.initializer == "function" && (this[e8.key] = e8.initializer.call(this));
  }, finisher(n9) {
    n9.createProperty(e8.key, i7);
  } }, e4 = (i7, e8, n9) => {
    e8.constructor.createProperty(n9, i7);
  };
  function n5(n9) {
    return (t5, o7) => o7 !== void 0 ? e4(n9, t5, o7) : i3(n9, t5);
  }

  // node_modules/@lit/reactive-element/decorators/query-assigned-elements.js
  var n6, e5 = ((n6 = window.HTMLSlotElement) === null || n6 === void 0 ? void 0 : n6.prototype.assignedElements) != null ? (o7, n9) => o7.assignedElements(n9) : (o7, n9) => o7.assignedNodes(n9).filter(((o8) => o8.nodeType === Node.ELEMENT_NODE));

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/ErrorMessage.js
  var ErrorMessage = ({ title, children }) => x`
  <div class="error-background">
    <div class="error-container">
      <span class="error-title"
        ><span class="error-badge">Error</span>${title}</span
      >
      <span class="error-description">${children}</span>
    </div>
  </div>
`, styles = i`
  .error-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    background: var(--error-bg);
    color: var(--error-fg);
  }

  .error-container {
    max-width: 800px;
    margin: auto;
    padding: 1em;
  }

  .error-badge {
    display: inline-block;
    font-size: 0.8em;
    padding: 0.2em 0.5em;
    margin-inline-end: 0.5em;

    background: var(--error-color);
    border-radius: 2px;
    color: var(--error-bg);
    text-transform: uppercase;
  }

  .error-title {
    display: block;
    font-size: 1.2em;

    font-weight: bold;
    text-transform: capitalize;
  }

  .error-description {
    display: block;
    margin-block-start: 1em;
  }
`;

  // node_modules/lit-html/directive.js
  var t3 = { ATTRIBUTE: 1, CHILD: 2, PROPERTY: 3, BOOLEAN_ATTRIBUTE: 4, EVENT: 5, ELEMENT: 6 }, e6 = (t5) => (...e8) => ({ _$litDirective$: t5, values: e8 }), i4 = class {
    constructor(t5) {
    }
    get _$AU() {
      return this._$AM._$AU;
    }
    _$AT(t5, e8, i7) {
      this._$Ct = t5, this._$AM = e8, this._$Ci = i7;
    }
    _$AS(t5, e8) {
      return this.update(t5, e8);
    }
    update(t5, e8) {
      return this.render(...e8);
    }
  };

  // node_modules/lit-html/directives/style-map.js
  var i5 = "important", n7 = " !" + i5, o6 = e6(class extends i4 {
    constructor(t5) {
      var e8;
      if (super(t5), t5.type !== t3.ATTRIBUTE || t5.name !== "style" || ((e8 = t5.strings) === null || e8 === void 0 ? void 0 : e8.length) > 2) throw Error("The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.");
    }
    render(t5) {
      return Object.keys(t5).reduce(((e8, r4) => {
        let s6 = t5[r4];
        return s6 == null ? e8 : e8 + `${r4 = r4.includes("-") ? r4 : r4.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, "-$&").toLowerCase()}:${s6};`;
      }), "");
    }
    update(e8, [r4]) {
      let { style: s6 } = e8.element;
      if (this.ht === void 0) {
        this.ht = /* @__PURE__ */ new Set();
        for (let t5 in r4) this.ht.add(t5);
        return this.render(r4);
      }
      this.ht.forEach(((t5) => {
        r4[t5] == null && (this.ht.delete(t5), t5.includes("-") ? s6.removeProperty(t5) : s6[t5] = "");
      }));
      for (let t5 in r4) {
        let e9 = r4[t5];
        if (e9 != null) {
          this.ht.add(t5);
          let r5 = typeof e9 == "string" && e9.endsWith(n7);
          t5.includes("-") || r5 ? s6.setProperty(t5, r5 ? e9.slice(0, -11) : e9, r5 ? i5 : "") : s6[t5] = e9;
        }
      }
      return T;
    }
  });

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/utils.js
  function absRect(rect) {
    return {
      top: rect.y,
      right: rect.x + rect.width,
      bottom: rect.y + rect.height,
      left: rect.x
    };
  }
  function getDistanceGuides(selected, compared) {
    let a3 = absRect(selected), b2 = absRect(compared), isYIntersecting = !(a3.top > b2.bottom || a3.bottom < b2.top), isXIntersecting = !(a3.left > b2.right || a3.right < b2.left);
    if (isXIntersecting && isYIntersecting) {
      let intersectCenter = {
        x: (Math.max(a3.left, b2.left) + Math.min(a3.right, b2.right)) / 2,
        y: (Math.max(a3.top, b2.top) + Math.min(a3.bottom, b2.bottom)) / 2
      };
      return [
        {
          points: [
            { x: a3.left, y: intersectCenter.y },
            { x: b2.left, y: intersectCenter.y }
          ]
        },
        {
          points: [
            {
              x: a3.right,
              y: intersectCenter.y
            },
            { x: b2.right, y: intersectCenter.y }
          ]
        },
        {
          points: [
            { y: a3.top, x: intersectCenter.x },
            { y: b2.top, x: intersectCenter.x }
          ]
        },
        {
          points: [
            {
              y: a3.bottom,
              x: intersectCenter.x
            },
            { y: b2.bottom, x: intersectCenter.x }
          ]
        }
      ];
    }
    let isALeft = a3.left > b2.right, isABelow = a3.top > b2.bottom, selectedCenter = {
      x: selected.x + selected.width / 2,
      y: selected.y + selected.height / 2
    };
    return [
      isXIntersecting ? null : {
        points: [
          { x: isALeft ? a3.left : a3.right, y: selectedCenter.y },
          { x: isALeft ? b2.right : b2.left, y: selectedCenter.y }
        ],
        bisector: isYIntersecting ? void 0 : [
          { x: isALeft ? b2.right : b2.left, y: selectedCenter.y },
          {
            x: isALeft ? b2.right : b2.left,
            y: isABelow ? b2.bottom : b2.top
          }
        ]
      },
      isYIntersecting ? null : {
        points: [
          { y: isABelow ? a3.top : a3.bottom, x: selectedCenter.x },
          { y: isABelow ? b2.bottom : b2.top, x: selectedCenter.x }
        ],
        bisector: isXIntersecting ? void 0 : [
          { y: isABelow ? b2.bottom : b2.top, x: selectedCenter.x },
          {
            y: isABelow ? b2.bottom : b2.top,
            x: isALeft ? b2.right : b2.left
          }
        ]
      }
    ].filter((x2) => !!x2);
  }
  function round(n9) {
    return Math.round(n9 * 100) / 100;
  }
  function extendStyles(left, right) {
    return [...stylesToArray(left), ...stylesToArray(right)];
  }
  function stylesToArray(styles6) {
    return styles6 ? styles6 instanceof Array ? styles6 : [styles6] : [];
  }

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/NodeSelectableMixin.js
  var __decorate = function(decorators, target, key, desc) {
    var c3 = arguments.length, r4 = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") r4 = Reflect.decorate(decorators, target, key, desc);
    else for (var i7 = decorators.length - 1; i7 >= 0; i7--) (d3 = decorators[i7]) && (r4 = (c3 < 3 ? d3(r4) : c3 > 3 ? d3(target, key, r4) : d3(target, key)) || r4);
    return c3 > 3 && r4 && Object.defineProperty(target, key, r4), r4;
  }, NodeSelectableMixin = (superClass) => {
    class NodeSelectable extends superClass {
      constructor(...args) {
        super(...args), this.selectedNode = null;
      }
      updated(changedProperties) {
        super.updated(changedProperties), changedProperties.has("selectedNode") && this.dispatchEvent(new CustomEvent("nodeselect", {
          detail: {
            selectedNode: this.selectedNode
          }
        }));
      }
    }
    return __decorate([
      n5({
        attribute: !1
      })
    ], NodeSelectable.prototype, "selectedNode", void 0), NodeSelectable;
  };

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/TouchGestureMixin.js
  function shouldSkipEvent(ev) {
    return ev.touches.length === 0 || ev.touches.length > 2;
  }
  function getDistance(a3, b2) {
    return Math.sqrt(Math.pow(a3.x - b2.x, 2) + Math.pow(a3.y - b2.y, 2));
  }
  var TouchGestureMixin = (superClass) => class extends superClass {
    constructor(...args) {
      super(...args), this.previousTouches = null, this.addEventListener("touchstart", (ev) => {
        shouldSkipEvent(ev) || (ev.preventDefault(), this.previousTouches = ev.touches);
      }), this.addEventListener("touchend", (ev) => {
        shouldSkipEvent(ev) || (ev.preventDefault(), this.previousTouches = null);
      }), this.addEventListener("touchcancel", (ev) => {
        shouldSkipEvent(ev) || (ev.preventDefault(), this.previousTouches = null);
      }), this.addEventListener("touchmove", (ev) => {
        if (shouldSkipEvent(ev))
          return;
        let previousTouches = Array.from(this.previousTouches || []), currentTouches = Array.from(ev.touches);
        if (this.previousTouches = ev.touches, !(currentTouches.length !== previousTouches.length || !currentTouches.every((t5) => previousTouches.some((pt) => pt.identifier === t5.identifier)))) {
          if (currentTouches.length === 1) {
            this.onTouchPan({
              x: currentTouches[0].pageX - previousTouches[0].pageX,
              y: currentTouches[0].pageY - previousTouches[0].pageY
            });
            return;
          }
          this.onTouchPinch(getDistance({
            x: currentTouches[0].pageX,
            y: currentTouches[0].pageY
          }, {
            x: previousTouches[0].pageX,
            y: previousTouches[0].pageY
          }));
        }
      });
    }
    get isTouching() {
      return !!(this.previousTouches && this.previousTouches.length > 0);
    }
    onTouchPan(delta) {
    }
    onTouchPinch(delta) {
    }
  };

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/PositionedMixin.js
  var __decorate2 = function(decorators, target, key, desc) {
    var c3 = arguments.length, r4 = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") r4 = Reflect.decorate(decorators, target, key, desc);
    else for (var i7 = decorators.length - 1; i7 >= 0; i7--) (d3 = decorators[i7]) && (r4 = (c3 < 3 ? d3(r4) : c3 > 3 ? d3(target, key, r4) : d3(target, key)) || r4);
    return c3 > 3 && r4 && Object.defineProperty(target, key, r4), r4;
  }, __classPrivateFieldGet = function(receiver, state, kind, f2) {
    if (kind === "a" && !f2) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state == "function" ? receiver !== state || !f2 : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f2 : kind === "a" ? f2.call(receiver) : f2 ? f2.value : state.get(receiver);
  }, __classPrivateFieldSet = function(receiver, state, value, kind, f2) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f2) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state == "function" ? receiver !== state || !f2 : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f2.call(receiver, value) : f2 ? f2.value = value : state.set(receiver, value), value;
  }, PositionedMixin = (superClass) => {
    var _Positioned_isDragModeOn, _Positioned_movePanel, _Positioned_keyDown, _Positioned_keyUp, _Positioned_listenToKeyboardEvents;
    class Positioned extends TouchGestureMixin(superClass) {
      constructor(...args) {
        super(...args), this.panX = 0, this.panY = 0, this.scale = 1, this.zoomSpeed = 500, this.panSpeed = 500, _Positioned_isDragModeOn.set(this, !1), _Positioned_movePanel.set(this, (shiftX, shiftY) => {
          this.panX += shiftX / this.scale / window.devicePixelRatio, this.panY += shiftY / this.scale / window.devicePixelRatio;
        }), _Positioned_keyDown.set(this, (event) => {
          event.code === "Space" && !__classPrivateFieldGet(this, _Positioned_isDragModeOn, "f") && (__classPrivateFieldSet(this, _Positioned_isDragModeOn, !0, "f"), document.body.style.cursor = "grab");
        }), _Positioned_keyUp.set(this, (event) => {
          event.code === "Space" && __classPrivateFieldGet(this, _Positioned_isDragModeOn, "f") && (__classPrivateFieldSet(this, _Positioned_isDragModeOn, !1, "f"), document.body.style.cursor = "auto");
        }), _Positioned_listenToKeyboardEvents.set(this, () => {
          document.addEventListener("keyup", __classPrivateFieldGet(this, _Positioned_keyUp, "f")), document.addEventListener("keydown", __classPrivateFieldGet(this, _Positioned_keyDown, "f"));
        }), this.addEventListener(
          "wheel",
          (ev) => {
            if (this.isMovable)
              if (ev.preventDefault(), ev.ctrlKey) {
                let { deltaY } = ev;
                ev.deltaMode === 1 && (deltaY *= 15);
                let prevScale = this.scale;
                this.scale *= 1 - deltaY / ((1e3 - this.zoomSpeed) * 0.5);
                let offsetX = ev.offsetX - this.offsetWidth / 2, offsetY = ev.offsetY - this.offsetHeight / 2;
                this.panX += offsetX / this.scale - offsetX / prevScale, this.panY += offsetY / this.scale - offsetY / prevScale;
              } else {
                let speed = this.panSpeed * 2e-3;
                this.panX -= ev.deltaX * speed / this.scale, this.panY -= ev.deltaY * speed / this.scale;
              }
          },
          // This component prevents every native wheel behavior on it.
          { passive: !1 }
        );
        let gestureStartScale = 1;
        this.addEventListener("gesturestart", (ev) => {
          ev.preventDefault(), gestureStartScale = this.scale;
        }), this.addEventListener("gesturechange", (_ev) => {
          let ev = _ev;
          ev.preventDefault(), this.scale = gestureStartScale * ev.scale;
        }), this.addEventListener("pointermove", (ev) => {
          ev.buttons & 4 && (ev.preventDefault(), __classPrivateFieldGet(this, _Positioned_movePanel, "f").call(this, ev.movementX, ev.movementY));
        }), __classPrivateFieldGet(this, _Positioned_listenToKeyboardEvents, "f").call(this), this.onmousedown = () => {
          __classPrivateFieldGet(this, _Positioned_isDragModeOn, "f") && (document.body.style.cursor = "grabbing", this.onmousemove = ({ movementX, movementY }) => {
            __classPrivateFieldGet(this, _Positioned_movePanel, "f").call(this, movementX, movementY);
          }, this.onmouseup = () => {
            document.body.style.cursor = "grab", this.onmousemove = null, this.onmouseup = null;
          });
        };
      }
      get isMovable() {
        return !0;
      }
      get canvasTransform() {
        return [
          `scale(${this.scale})`,
          `translate(${this.panX}px, ${this.panY}px)`
        ];
      }
      disconnectedCallback() {
        document.removeEventListener("keyup", __classPrivateFieldGet(this, _Positioned_keyUp, "f")), document.removeEventListener("keydown", __classPrivateFieldGet(this, _Positioned_keyDown, "f")), super.disconnectedCallback();
      }
      // Dispatch events when the position-related value changes.
      updated(changedProperties) {
        super.updated(changedProperties), changedProperties.has("scale") && this.dispatchEvent(new CustomEvent("scalechange", {
          detail: {
            scale: this.scale
          }
        })), (changedProperties.has("panX") || changedProperties.has("panY")) && this.dispatchEvent(new CustomEvent("positionchange", {
          detail: {
            x: this.panX,
            y: this.panY
          }
        }));
      }
      onTouchPan(delta) {
        this.panX += delta.x / this.scale, this.panY += delta.y / this.scale;
      }
      onTouchPinch(delta) {
        this.scale *= 1 - delta / 1e3;
      }
    }
    return _Positioned_isDragModeOn = /* @__PURE__ */ new WeakMap(), _Positioned_movePanel = /* @__PURE__ */ new WeakMap(), _Positioned_keyDown = /* @__PURE__ */ new WeakMap(), _Positioned_keyUp = /* @__PURE__ */ new WeakMap(), _Positioned_listenToKeyboardEvents = /* @__PURE__ */ new WeakMap(), __decorate2([
      n5({
        attribute: !1
      })
    ], Positioned.prototype, "panX", void 0), __decorate2([
      n5({
        attribute: !1
      })
    ], Positioned.prototype, "panY", void 0), __decorate2([
      n5({
        attribute: !1
      })
    ], Positioned.prototype, "scale", void 0), __decorate2([
      n5({
        type: Number,
        attribute: "zoom-speed"
      })
    ], Positioned.prototype, "zoomSpeed", void 0), __decorate2([
      n5({
        type: Number,
        attribute: "pan-speed"
      })
    ], Positioned.prototype, "panSpeed", void 0), Positioned;
  };

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/DistanceGuide.js
  var Line = ({ guide, reverseScale }) => {
    let xLength = Math.abs(guide.points[0].x - guide.points[1].x), yLength = Math.abs(guide.points[0].y - guide.points[1].y);
    return xLength === 0 && yLength === 0 ? null : b`
    <line
      class="distance-line"
      x1=${guide.points[0].x}
      y1=${guide.points[0].y}
      x2=${guide.points[1].x}
      y2=${guide.points[1].y}
    />

    ${guide.bisector && b`
        <line
          class="distance-line"
          x1=${guide.bisector[0].x}
          y1=${guide.bisector[0].y}
          x2=${guide.bisector[1].x}
          y2=${guide.bisector[1].y}
          style=${o6({
      strokeDasharray: `${4 * reverseScale}`
    })}
          shape-rendering="geometricPrecision"
          fill="none"
        />
      `}
  `;
  }, Tooltip = ({ guide, reverseScale, fontSize }) => {
    let xLength = Math.abs(guide.points[0].x - guide.points[1].x), yLength = Math.abs(guide.points[0].y - guide.points[1].y);
    if (xLength === 0 && yLength === 0)
      return null;
    let text = round(Math.max(xLength, yLength)).toString(10), width = text.length * fontSize * 0.5, startMargin = fontSize * 0.25, vPadding = fontSize * 0.25, hPadding = fontSize * 0.5, x2 = xLength > yLength ? (guide.points[0].x + guide.points[1].x) / 2 - width / 2 : guide.points[0].x, y3 = xLength > yLength ? guide.points[0].y : (guide.points[0].y + guide.points[1].y) / 2 - fontSize / 2, transform = [
      `scale(${reverseScale})`,
      xLength > yLength ? `translate(0, ${startMargin + vPadding})` : `translate(${startMargin + hPadding}, 0)`
    ].join(" "), cx = x2 + width / 2, cy = y3 + fontSize / 2, transformOrigin = xLength > yLength ? `${cx} ${y3}` : `${x2} ${cy}`;
    return b`
    <g class="distance-tooltip">
      <rect
        x=${x2 - hPadding}
        y=${y3 - vPadding}
        rx="2"
        width=${width + hPadding * 2}
        height=${fontSize + vPadding * 2}
        transform=${transform}
        transform-origin=${transformOrigin}
        stroke="none"
      />

      <text
        x=${cx}
        y=${y3 + fontSize - vPadding / 2}
        text-anchor="middle"
        transform=${transform}
        transform-origin=${transformOrigin}
        stroke="none"
        fill="white"
        style="font-size: ${fontSize}px"
      >
        ${text}
      </text>
    </g>
  `;
  }, guidesCache = /* @__PURE__ */ new Map(), Guides = ({ node, distanceTo, reverseScale, fontSize }) => {
    let combinedId = node.id + `
` + distanceTo.id, guides = guidesCache.get(combinedId);
    return guides || (guides = getDistanceGuides(node.absoluteBoundingBox, distanceTo.absoluteBoundingBox), guidesCache.set(combinedId, guides)), [
      ...guides.map((guide) => Line({ guide, reverseScale })),
      ...guides.map((guide) => Tooltip({ guide, reverseScale, fontSize }))
    ];
  }, styles2 = i`
  .distance-line {
    shape-rendering: geometricPrecision;
    fill: none;
    opacity: 0;
  }

  .distance-tooltip {
    opacity: 0;
  }

  .guide:hover ~ .distance-line,
  .guide:hover ~ .distance-tooltip {
    opacity: 1;
  }
`;

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/Icons.js
  var CloseIcon = ({ onClick = () => {
  } }) => b`
  <svg @click=${onClick} title="close icon" width="14" height="14" viewBox="0 0 20 20" fill="none">
    <path d="M1 19L19 1M19 19L1 1" stroke="#B3B3B3" stroke-width="2"/>
  </svg>
`, CopyIcon = ({ onClick = () => {
  } }) => b`
  <svg @click=${onClick} title="copy icon" width="14" height="14" viewBox="0 0 30 30" fill="none">
  <path d="M21 25.5C21 24.9477 20.5523 24.5 20 24.5C19.4477 24.5 19 24.9477 19 25.5H21ZM13 2H25V0H13V2ZM28 5V21H30V5H28ZM25 24H13V26H25V24ZM10 21V5H8V21H10ZM13 24C11.3431 24 10 22.6569 10 21H8C8 23.7614 10.2386 26 13 26V24ZM28 21C28 22.6569 26.6569 24 25 24V26C27.7614 26 30 23.7614 30 21H28ZM25 2C26.6569 2 28 3.34315 28 5H30C30 2.23858 27.7614 0 25 0V2ZM13 0C10.2386 0 8 2.23858 8 5H10C10 3.34315 11.3431 2 13 2V0ZM16.5 28H5V30H16.5V28ZM2 25V10H0V25H2ZM5 28C3.34315 28 2 26.6569 2 25H0C0 27.7614 2.23858 30 5 30V28ZM5 7H8V5H5V7ZM2 10C2 8.34315 3.34315 7 5 7V5C2.23858 5 0 7.23858 0 10H2ZM16.5 30C18.9853 30 21 27.9853 21 25.5H19C19 26.8807 17.8807 28 16.5 28V30Z" fill="#B3B3B3"/>
</svg>
`, HorizontalPaddingIcon = () => b`
  <svg title="horizontal padding" width="14" height="14" viewBox="0 0 29 28" fill="none">
    <rect x="7" y="8" width="14" height="14" stroke="#B3B3B3" stroke-width="2"/>
    <path d="M27 1V28" stroke="#B3B3B3" stroke-width="2"/>
    <path d="M1 0V28" stroke="#B3B3B3" stroke-width="2"/>
  </svg>
`, VerticalPaddingIcon = () => b`
  <svg title="vertical padding" width="14" height="14" viewBox="0 0 29 28" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect x="8" y="21" width="14" height="14" transform="rotate(-90 8 21)" stroke="#B3B3B3" stroke-width="2"/>
    <path d="M1 1L28 0.999999" stroke="#B3B3B3" stroke-width="2"/>
    <path d="M0 27L28 27" stroke="#B3B3B3" stroke-width="2"/>
  </svg>
`, FigmaIcon = () => b`
  <svg title="figma logo" width="11" height="16" viewBox="0 0 12 17" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M5.5 1.5h-2c-1.105 0-2 .895-2 2 0 1.105.895 2 2 2h2v-4zm-5 2c0 1.043.533 1.963 1.341 2.5C1.033 6.537.5 7.457.5 8.5c0 1.043.533 1.963 1.341 2.5C1.033 11.537.5 12.457.5 13.5c0 1.657 1.343 3 3 3 1.657 0 3-1.343 3-3V10.736c.53.475 1.232.764 2 .764 1.657 0 3-1.343 3-3 0-1.043-.533-1.963-1.341-2.5.808-.537 1.341-1.457 1.341-2.5 0-1.657-1.343-3-3-3h-5c-1.657 0-3 1.343-3 3zm1 5c0-1.105.895-2 2-2h2v4h-2c-1.105 0-2-.895-2-2zm0 5c0-1.105.895-2 2-2h2v2c0 1.105-.895 2-2 2-1.105 0-2-.895-2-2zm7-3c-1.105 0-2-.895-2-2 0-1.105.895-2 2-2 1.105 0 2 .895 2 2 0 1.105-.895 2-2 2zm0-5h-2v-4h2c1.105 0 2 .895 2 2 0 1.105-.895 2-2 2z"
      fill-rule="evenodd"
      fill-opacity="1"
      fill="#000"
      stroke="none"
    ></path>
  </svg>
`;

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/InspectorView/utils.js
  var extractColorStyle = (color2) => color2.a === 0 ? "transparent" : color2.a < 1 ? `rgba(${rgbToIntArray(color2).join(", ")}, ${color2.a.toFixed(2)})` : rgbToHex(color2), extractGradientColorStyle = (color2) => new Gradient(color2).cssColor, Gradient = class {
    constructor(data) {
      this.gradientHandles = {
        start: data.gradientHandlePositions[0],
        end: data.gradientHandlePositions[1]
      }, this.colors = data.gradientStops, this.colorObjects = this.createColorObjects(this.colors), this.angle = this.calculateAngle(this.gradientHandles.start, this.gradientHandles.end);
    }
    get cssGradientArray() {
      return this.colorObjects.map((color2, index) => {
        let position = this.floatToPercent(this.colors[index].position);
        return color2 + " " + position;
      });
    }
    get cssColor() {
      let cssGradientArray = this.cssGradientArray;
      return cssGradientArray.unshift(this.angle + "deg"), `linear-gradient(${cssGradientArray.join(", ")})`;
    }
    createColorObjects(colors) {
      return colors.map(({ color: color2 }) => extractColorStyle(color2));
    }
    floatToPercent(value) {
      return (value *= 100).toFixed(0) + "%";
    }
    calculateAngle(startHandle, endHandle) {
      let radians = Math.atan(this.calculateGradient(startHandle, endHandle));
      return parseInt(this.radToDeg(radians).toFixed(1));
    }
    calculateGradient(startHandle, endHandle) {
      return (endHandle.y - startHandle.y) / (endHandle.x - startHandle.x) * -1;
    }
    radToDeg(radian) {
      return 180 * radian / Math.PI;
    }
  }, NodeStyles = class {
    constructor(node) {
      var _a, _b, _c;
      if (this.hasPadding = !1, this.height = `${Math.trunc(node.absoluteBoundingBox.height)}px`, this.width = `${Math.trunc(node.absoluteBoundingBox.width)}px`, (node.horizontalPadding || node.verticalPadding) && (this.hasPadding = !0, this.horizontalPadding = `${node.horizontalPadding}px`, this.verticalPadding = `${node.verticalPadding}px`), node.style && (this.fontFamily = node.style.fontFamily, this.fontPostScriptName = (_a = node.style.fontPostScriptName) === null || _a === void 0 ? void 0 : _a.replace("-", " "), this.fontWeight = node.style.fontWeight, this.fontSize = `${Math.ceil(node.style.fontSize)}px`, this.lineHeight = `${Math.trunc(node.style.lineHeightPx)}px`), node.rectangleCornerRadii && (this.borderRadius = node.rectangleCornerRadii.filter((radius) => radius === node.cornerRadius).length < 4 ? `${node.rectangleCornerRadii.join("px ")}px` : `${node.cornerRadius}px`), node.backgroundColor || node.backgroundColor) {
        let color2 = node.backgroundColor || ((_b = node.background) === null || _b === void 0 ? void 0 : _b[0].color);
        this.background = extractColorStyle(color2);
      }
      let fillColor = (_c = node.fills) === null || _c === void 0 ? void 0 : _c[0];
      if (fillColor && fillColor.visible !== !1 && (node.type === "TEXT" ? this.color = extractColorStyle(fillColor.color) : fillColor.type.includes("GRADIENT") ? this.backgroundImage = extractGradientColorStyle(fillColor) : fillColor.type === "SOLID" && (this.background = extractColorStyle(fillColor.color))), node.strokes && node.strokes.length > 0 && (this.borderColor = extractColorStyle(node.strokes[0].color), this.border = `${node.strokeWeight}px solid ${this.borderColor}`), node.effects && node.effects.length > 0) {
        let { offset, radius, color: color2 } = node.effects[0];
        this.boxShadowColor = extractColorStyle(color2), this.boxShadow = `${offset?.x || 0}px ${offset?.y || 0}px 0 ${radius} ${this.boxShadowColor}`;
      }
    }
    getStyles() {
      return [
        this.height && { property: "height", value: this.height },
        this.width && { property: "width", value: this.width },
        this.fontFamily && { property: "font-family", value: this.fontFamily },
        this.fontSize && { property: "font-size", value: this.fontSize },
        this.fontWeight && { property: "font-weight", value: this.fontWeight },
        this.lineHeight && { property: "line-height", value: this.lineHeight },
        this.borderRadius && {
          property: "border-radius",
          value: this.borderRadius
        },
        this.backgroundImage && {
          property: "background-image",
          value: this.backgroundImage
        },
        this.boxShadow && {
          property: "box-shadow",
          value: this.boxShadow,
          color: this.boxShadowColor
        },
        this.border && {
          property: "border",
          value: this.border,
          color: this.borderColor
        },
        this.background && {
          property: "background",
          value: this.background,
          color: this.background
        },
        this.color && { property: "color", value: this.color, color: this.color }
      ].filter(Boolean);
    }
    getStyleSheet() {
      return this.getStyles().map(getStyleRule).join(`
`);
    }
  }, rgbToIntArray = (color2) => [
    Math.trunc(255 * color2.r),
    Math.trunc(255 * color2.g),
    Math.trunc(255 * color2.b)
  ], rgbToHex = (color2) => {
    let [r4, g2, b2] = rgbToIntArray(color2);
    return "#" + ((1 << 24) + (r4 << 16) + (g2 << 8) + b2).toString(16).slice(1);
  }, getStyleRule = ({ property, value }) => `${property}: ${value};`;

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/InspectorView/InspectorView.js
  var __awaiter = function(thisArg, _arguments, P3, generator) {
    function adopt(value) {
      return value instanceof P3 ? value : new P3(function(resolve) {
        resolve(value);
      });
    }
    return new (P3 || (P3 = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e8) {
          reject(e8);
        }
      }
      function rejected(value) {
        try {
          step(generator.throw(value));
        } catch (e8) {
          reject(e8);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }, copy = (text) => __awaiter(void 0, void 0, void 0, function* () {
    yield navigator.clipboard.writeText(text);
  }), View = ({ node, onClose }) => {
    if (!node)
      return null;
    let nodeStyles = new NodeStyles(node), stopPropagation = (ev) => ev.stopPropagation();
    return x`
    <div
      class="inspector-view"
      @click=${stopPropagation}
      @wheel=${stopPropagation}
      @keydown=${stopPropagation}
      @keyup=${stopPropagation}
      @pointermove=${stopPropagation}
    >
      <div class="inspector-section selectable-content">
        <div class="title-section">
          <h4>${node.name}</h4>
          ${CloseIcon({ onClick: onClose })}
        </div>
        <div class="properties-overview">
          <div class="title-section">
            <p class="inspector-property">
              <span>W: </span>${nodeStyles.width}
            </p>
            <p class="inspector-property" style="margin-left: 16px;">
              <span>H: </span>${nodeStyles.height}
            </p>
          </div>
          ${nodeStyles.fontPostScriptName ? x`<p class="inspector-property">
                <span>Font:</span>
                ${nodeStyles.fontPostScriptName}
              </p>` : null}
        </div>
      </div>
      ${nodeStyles.hasPadding ? x`<div class="inspector-section">
            <h4>Layout</h4>
            ${nodeStyles.horizontalPadding && x`<p class="inspector-property">
              ${HorizontalPaddingIcon()} ${nodeStyles.horizontalPadding}
            </p>`}
            ${nodeStyles.verticalPadding && x`<p class="inspector-property">
              ${VerticalPaddingIcon()} ${nodeStyles.verticalPadding}
            </p>`}
          </div>` : null}
      ${node.characters ? x`<div class="inspector-section">
            <div class="title-section">
              <h4>Content</h4>
              ${CopyIcon({ onClick: () => copy(node.characters) })}
            </div>
            <p class="node-content code-section selectable-content">
              ${node.characters}
            </p>
          </div>` : null}
      ${StylesSection(nodeStyles)}
    </div>
  `;
  }, StylesSection = (nodeStyles) => {
    let onClick = () => copy(nodeStyles.getStyleSheet()), styles6 = nodeStyles.getStyles();
    return x`<div class="inspector-section">
    <div class="title-section style-section">
      <h4>CSS</h4>
      ${CopyIcon({ onClick })}
    </div>
    <div class="code-section selectable-content">
      ${styles6.map(CSSProperty)}
    </div>
  </div>`;
  }, CSSProperty = (cssProperty) => {
    let { property, value, color: color2 } = cssProperty, coloredSquare = null;
    switch (property) {
      case "background":
      case "fill":
      case "border":
      case "box-shadow":
      case "color":
        coloredSquare = x`<span
        class="color-preview"
        style="background-color: ${color2}"
      ></span>`;
        break;
      case "background-image":
        coloredSquare = x`<span
        class="color-preview"
        style="background-image: ${value}"
      ></span>`;
        break;
    }
    return x`<div class="css-property" @click=${() => copy(getStyleRule(cssProperty))}>
    <span>${property}:</span>${coloredSquare}<span class="css-value">${value}</span>;</span>
  </div>`;
  }, styles3 = i`
  .inspector-view {
    height: 100%;
    width: 300px;
    position: absolute;
    right: 0;
    background: white;
    border-left: 1px solid #ccc;
    overflow-y: auto;
    z-index: calc(var(--z-index) + 2);
  }

  .inspector-view h4 {
    font-size: 16px;
    margin: 0;
  }

  .style-section {
    margin-bottom: 12px;
  }

  .title-section {
    display: flex;
    align-items: center;
  }

  .code-section {
    padding: 8px;
    background: #f3f3f3;
    font-family: monospace;
  }

  .title-section svg {
    cursor: pointer;
    margin-left: auto;
  }

  .inspector-section {
    padding: 16px;
    border-bottom: 1px solid #eee;
  }

  .properties-overview {
    font-family: monospace;
    color: #518785;
  }

  .properties-overview p span {
    color: #121212;
  }

  .inspector-property {
    display: flex;
    align-items: center;
    margin-bottom: 0;
  }

  .inspector-property span {
    color: #b3b3b3;
    margin-right: 4px;
  }

  .inspector-property svg {
    margin-right: 8px;
  }

  .css-property {
    margin: 8px;
    transition: background-color ease-in-out 100ms;
  }

  .css-property:hover {
    cursor: pointer;
    background-color: #e8e8e8;
  }

  .css-value {
    color: #518785;
    margin-left: 4px;
  }

  .color-preview {
    display: inline-block;
    width: 12px;
    height: 12px;
    border: 1px solid #ccc;
    margin-left: 4px;
    vertical-align: middle;
  }

  .selectable-content {
    cursor: text;
    user-select: text;
  }
`;

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/Node.js
  var Outline = ({ node, selected = !1, computedThickness, onClick }) => {
    let { x: x2, y: y3, width, height } = node.absoluteBoundingBox, radius = "cornerRadius" in node && node.cornerRadius ? {
      topLeft: node.cornerRadius,
      topRight: node.cornerRadius,
      bottomRight: node.cornerRadius,
      bottomLeft: node.cornerRadius
    } : "rectangleCornerRadii" in node && node.rectangleCornerRadii ? {
      topLeft: node.rectangleCornerRadii[0],
      topRight: node.rectangleCornerRadii[1],
      bottomRight: node.rectangleCornerRadii[2],
      bottomLeft: node.rectangleCornerRadii[3]
    } : {
      topLeft: 0,
      topRight: 0,
      bottomRight: 0,
      bottomLeft: 0
    }, shift = computedThickness / 2, moveTo = (x3, y4) => `M${x3},${y4}`, lineTo = (x3, y4) => `L${x3},${y4}`, arcTo = (r4, x3, y4) => `A${r4},${r4} 0 0 1 ${x3},${y4}`, boxPath = [
      moveTo(radius.topLeft + shift, shift),
      lineTo(width - radius.topRight, shift),
      arcTo(radius.topRight - shift, width - shift, radius.topRight),
      lineTo(width - shift, height - radius.bottomRight),
      arcTo(radius.bottomRight - shift, width - radius.bottomRight, height - shift),
      lineTo(radius.bottomLeft, height - shift),
      arcTo(radius.bottomLeft - shift, shift, height - radius.bottomLeft),
      lineTo(shift, radius.topLeft),
      arcTo(radius.topLeft - shift, radius.topLeft, shift),
      "Z"
    ].join(" ");
    return b`
    <path
      class="guide"
      d=${boxPath}
      shape-rendering="geometricPrecision"
      fill="none"
      transform="translate(${x2}, ${y3})"
      ?data-selected=${selected}
      @click=${onClick}
    />
  `;
  }, Tooltip2 = ({ nodeSize: { x: x2, y: y3, width, height }, offsetX, offsetY, reverseScale }) => {
    let tooltipStyle = {
      top: `${offsetY + y3 + height}px`,
      left: `${offsetX + x2 + width / 2}px`,
      transform: `translateX(-50%) scale(${reverseScale}) translateY(0.25em)`
    };
    return x`
    <div class="tooltip" style="${o6(tooltipStyle)}">
      ${round(width)} x ${round(height)}
    </div>
  `;
  }, styles4 = i`
  .guide {
    /*
     * SVGs cannot be pixel perfect, especially floating values.
     * Since many platform renders them visually incorrectly (probably they
     * are following the spec), it's safe to set overflow to visible.
     * Cropped borders are hard to visible and ugly.
     */
    overflow: visible;

    pointer-events: all;

    opacity: 0;
  }
  .guide:hover {
    opacity: 1;
  }
  .guide[data-selected] {
    opacity: 1;
    stroke: var(--guide-selected-color);
  }

  .tooltip {
    position: absolute;
    padding: 0.25em 0.5em;
    font-size: var(--guide-tooltip-font-size);

    color: var(--guide-selected-tooltip-fg);
    background-color: var(--guide-selected-tooltip-bg);
    border-radius: 2px;
    pointer-events: none;
    z-index: calc(var(--z-index) + 1);

    transform-origin: top center;
  }
`;

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/Footer/utils.js
  var intervals = [
    { gte: 31536e6, divisor: 31536e6, unit: "year" },
    { gte: 2592e6, divisor: 2592e6, unit: "month" },
    { gte: 6048e5, divisor: 6048e5, unit: "week" },
    { gte: 864e5, divisor: 864e5, unit: "day" },
    { gte: 36e5, divisor: 36e5, unit: "hour" },
    { gte: 6e4, divisor: 6e4, unit: "minute" },
    { gte: 3e4, divisor: 1e3, unit: "seconds" },
    { gte: 0, divisor: 1, text: "just now" }
  ], getTime = (targetDate) => (typeof targetDate == "object" ? targetDate : new Date(targetDate)).getTime(), fromNow = (date, nowDate = Date.now(), rft = new Intl.RelativeTimeFormat(void 0, { numeric: "auto" })) => {
    let diff = getTime(nowDate) - getTime(date), diffAbs = Math.abs(diff);
    for (let interval of intervals)
      if (diffAbs >= interval.gte) {
        let x2 = Math.round(Math.abs(diff) / interval.divisor), isInFuture = diff < 0, intervalUnit = interval.unit;
        return intervalUnit ? rft.format(isInFuture ? x2 : -x2, intervalUnit) : interval.text;
      }
  };

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/Footer/Footer.js
  var styles5 = i`
  .figma-footer {
    flex: 0;
    z-index: calc(var(--z-index) + 1);
    border-top: 1px solid #ccc;
    min-height: 48px;
    padding: 0 16px;
    text-decoration: none;
    display: flex;
    flex-direction: row;
    justify-content: start;
    align-items: center;
    background-color: #fff;
    overflow-x: auto;
    cursor: pointer;
    font-size: 12px;
    color: rgba(0, 0, 0, 0.8);
  }

  .figma-footer--icon {
    margin-right: 12px;
  }

  .figma-footer--title {
    font-weight: 600;
    margin-right: 4px;

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .figma-footer--timestamp {
    white-space: nowrap;
    overflow: hidden;
  }
`, Footer = (metadata) => {
    if (!metadata || !metadata.link || metadata.link === void 0 || metadata.link === "undefined")
      return null;
    let { link, timestamp, fileName } = metadata;
    return x`<a
    class="figma-footer"
    target="_blank"
    rel="noopener"
    title="Open in Figma"
    href="${link}"
  >
    <span class="figma-footer--icon"> ${FigmaIcon()} </span>
    <span class="figma-footer--title"> ${fileName} </span>
    <span
      title="Last time edited: ${new Date(timestamp).toUTCString()}"
      class="figma-footer--timestamp"
    >
      Edited ${fromNow(timestamp)}
    </span>
  </a>`;
  };

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/ViewerMixin.js
  var __decorate3 = function(decorators, target, key, desc) {
    var c3 = arguments.length, r4 = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") r4 = Reflect.decorate(decorators, target, key, desc);
    else for (var i7 = decorators.length - 1; i7 >= 0; i7--) (d3 = decorators[i7]) && (r4 = (c3 < 3 ? d3(r4) : c3 > 3 ? d3(target, key, r4) : d3(target, key)) || r4);
    return c3 > 3 && r4 && Object.defineProperty(target, key, r4), r4;
  }, __classPrivateFieldGet2 = function(receiver, state, kind, f2) {
    if (kind === "a" && !f2) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state == "function" ? receiver !== state || !f2 : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f2 : kind === "a" ? f2.call(receiver) : f2 ? f2.value : state.get(receiver);
  }, __classPrivateFieldSet2 = function(receiver, state, value, kind, f2) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f2) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state == "function" ? receiver !== state || !f2 : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f2.call(receiver, value) : f2 ? f2.value = value : state.set(receiver, value), value;
  }, ViewerMixin = (superClass) => {
    var _Viewer_canvasSize, _Viewer_effectMargins, _Viewer_flattenedNodes, _Viewer_handleNodeClick, _Viewer_getNodeById;
    class Viewer extends NodeSelectableMixin(PositionedMixin(superClass)) {
      constructor(...args) {
        super(...args), this.zoomMargin = 50, this.link = "", _Viewer_canvasSize.set(this, void 0), _Viewer_effectMargins.set(this, void 0), _Viewer_flattenedNodes.set(this, void 0), _Viewer_handleNodeClick.set(this, (node) => (ev) => {
          ev.preventDefault(), ev.stopPropagation(), this.selectedNode = node;
        }), _Viewer_getNodeById.set(this, (id) => {
          var _a, _b;
          return (_b = (_a = __classPrivateFieldGet2(this, _Viewer_flattenedNodes, "f")) === null || _a === void 0 ? void 0 : _a.find((n9) => n9.id === id)) !== null && _b !== void 0 ? _b : null;
        });
      }
      static get styles() {
        let styles6 = super.styles;
        return extendStyles(styles6, [
          i`
          :host {
            --default-error-bg: #fff;
            --default-error-fg: #333;

            --bg: var(--figspec-viewer-bg, #e5e5e5);
            --z-index: var(--figspec-viewer-z-index, 0);
            --error-bg: var(--figspec-viewer-error-bg, var(--default-error-bg));
            --error-fg: var(--figspec-viewer-error-fg, var(--default-error-fg));
            --error-color: var(--figspec-viewer-error-color, tomato);

            --guide-thickness: var(--figspec-viewer-guide-thickness, 1.5px);
            --guide-color: var(--figspec-viewer-guide-color, tomato);
            --guide-selected-color: var(
              --figspec-viewer-guide-selected-color,
              dodgerblue
            );
            --guide-tooltip-fg: var(--figspec-viewer-guide-tooltip-fg, white);
            --guide-selected-tooltip-fg: var(
              --figspec-viewer-guide-selected-tooltip-fg,
              white
            );
            --guide-tooltip-bg: var(
              --figspec-viewer-guide-tooltip-bg,
              var(--guide-color)
            );
            --guide-selected-tooltip-bg: var(
              --figspec-viewer-guide-selected-tooltip-bg,
              var(--guide-selected-color)
            );
            --guide-tooltip-font-size: var(
              --figspec-viewer-guide-tooltip-font-size,
              12px
            );

            position: relative;
            display: block;

            background-color: var(--bg);
            user-select: none;
            overflow: hidden;
            z-index: var(--z-index);
          }

          @media (prefers-color-scheme: dark) {
            :host {
              --default-error-bg: #222;
              --default-error-fg: #fff;
            }
          }

          .spec-canvas-wrapper {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column-reverse;
          }

          .canvas {
            position: absolute;
            top: 50%;
            left: 50%;
            flex: 1;
          }

          .rendered-image {
            position: absolute;
            top: 0;
            left: 0;
          }

          .guides {
            position: absolute;

            overflow: visible;
            stroke: var(--guide-color);
            fill: var(--guide-color);
            pointer-events: none;
            z-index: calc(var(--z-index) + 2);
          }
        `,
          styles4,
          styles,
          styles2,
          styles3,
          styles5
        ]);
      }
      get __images() {
        return {};
      }
      deselectNode() {
        this.selectedNode = null;
      }
      get error() {
        return !__classPrivateFieldGet2(this, _Viewer_canvasSize, "f") || !__classPrivateFieldGet2(this, _Viewer_flattenedNodes, "f") ? ErrorMessage({
          title: "Error",
          children: "Please call `__updateTree/1` method with a valid parameter."
        }) : null;
      }
      render() {
        if (this.error)
          return this.error instanceof Error ? ErrorMessage({
            title: this.error.name || "Error",
            children: this.error.message
          }) : typeof this.error == "string" ? ErrorMessage({
            title: "Error",
            children: this.error
          }) : this.error;
        let canvasSize = __classPrivateFieldGet2(this, _Viewer_canvasSize, "f"), reverseScale = 1 / this.scale, guideThickness = `calc(var(--guide-thickness) * ${reverseScale})`, computedGuideThickness = parseFloat(getComputedStyle(this).getPropertyValue("--guide-thickness")), computedGuideTooltipFontSize = parseFloat(getComputedStyle(this).getPropertyValue("--guide-tooltip-font-size"));
        return x`
        <div class="spec-canvas-wrapper" @click=${this.deselectNode}>
          <div
            class="canvas"
            style="
          width: ${canvasSize.width}px;
          height: ${canvasSize.height}px;

          transform: translate(-50%, -50%) ${this.canvasTransform.join(" ")}
        "
          >
            ${Object.entries(this.__images).map(([nodeId, uri]) => {
          var _a;
          let node = __classPrivateFieldGet2(this, _Viewer_getNodeById, "f").call(this, nodeId);
          if (!node || !("absoluteBoundingBox" in node) || !(!((_a = __classPrivateFieldGet2(this, _Viewer_effectMargins, "f")) === null || _a === void 0) && _a[node.id]))
            return null;
          let margin = __classPrivateFieldGet2(this, _Viewer_effectMargins, "f")[node.id];
          return x`
                <img
                  class="rendered-image"
                  src="${uri}"
                  style=${o6({
            top: `${node.absoluteBoundingBox.y - canvasSize.y}px`,
            left: `${node.absoluteBoundingBox.x - canvasSize.x}px`,
            marginTop: `${-margin.top}px`,
            marginLeft: `${-margin.left}px`,
            width: node.absoluteBoundingBox.width + margin.left + margin.right + "px",
            height: node.absoluteBoundingBox.height + margin.top + margin.bottom + "px"
          })}
                />
              `;
        })}
            ${this.selectedNode && Tooltip2({
          nodeSize: this.selectedNode.absoluteBoundingBox,
          offsetX: -canvasSize.x,
          offsetY: -canvasSize.y,
          reverseScale
        })}
            ${b`
            <svg
              class="guides"
              viewBox="0 0 ${canvasSize.width} ${canvasSize.height}"
              width=${canvasSize.width}
              height=${canvasSize.height}
              style=${o6({
          left: `${-canvasSize.x}px`,
          top: `${-canvasSize.y}px`,
          strokeWidth: guideThickness
        })}
            >
              ${this.selectedNode && Outline({
          node: this.selectedNode,
          selected: !0,
          computedThickness: computedGuideThickness * reverseScale
        })}

              ${__classPrivateFieldGet2(this, _Viewer_flattenedNodes, "f").map((node) => {
          var _a;
          return node.id === ((_a = this.selectedNode) === null || _a === void 0 ? void 0 : _a.id) ? null : b`
                  <g>
                    ${Outline({
            node,
            computedThickness: computedGuideThickness * reverseScale,
            onClick: __classPrivateFieldGet2(this, _Viewer_handleNodeClick, "f").call(this, node)
          })}
                    ${this.selectedNode && Guides({
            node,
            distanceTo: this.selectedNode,
            reverseScale,
            fontSize: computedGuideTooltipFontSize
          })}
                  </g>
                `;
        })}
            </svg>
          `}
          </div>
          ${View({
          node: this.selectedNode,
          onClose: this.deselectNode
        })}
          ${Footer(this.getMetadata())}
        </div>
      `;
      }
      // implemented in FileViewer/FrameViewer
      getMetadata() {
      }
      connectedCallback() {
        super.connectedCallback(), this.resetZoom();
      }
      updated(changedProperties) {
        super.updated(changedProperties);
      }
      __updateTree(node) {
        if (!(node.type === "CANVAS" || node.type === "FRAME" || node.type === "COMPONENT" || //@ts-ignore NOTE: figma-js does not implement COMPONENT_SET type (yet?)
        node.type === "COMPONENT_SET"))
          throw new Error("Cannot update node tree: Top level node MUST be one of CANVAS, FRAME, COMPONENT, or COMPONENT_SET");
        __classPrivateFieldSet2(this, _Viewer_canvasSize, node.type === "CANVAS" ? getCanvasSize(node) : node.absoluteBoundingBox, "f"), __classPrivateFieldSet2(this, _Viewer_flattenedNodes, flattenNode(node), "f"), this.requestUpdate();
      }
      __updateEffectMargins() {
        if (!this.__images)
          return;
        let containers = Object.keys(this.__images).map(__classPrivateFieldGet2(this, _Viewer_getNodeById, "f")).filter((n9) => !!n9);
        __classPrivateFieldSet2(this, _Viewer_effectMargins, containers.reduce((margin, node) => "absoluteBoundingBox" in node ? Object.assign(Object.assign({}, margin), { [node.id]: getEffectMargin(node, flattenNode(node)) }) : margin, {}), "f"), this.requestUpdate();
      }
      resetZoom() {
        if (__classPrivateFieldGet2(this, _Viewer_canvasSize, "f")) {
          let { width, height } = __classPrivateFieldGet2(this, _Viewer_canvasSize, "f"), { width: elementWidth, height: elementHeight } = this.getBoundingClientRect(), wDiff = elementWidth / (width + this.zoomMargin * 2), hDiff = elementHeight / (height + this.zoomMargin * 2);
          this.scale = Math.min(wDiff, hDiff, 1);
        }
      }
    }
    return _Viewer_canvasSize = /* @__PURE__ */ new WeakMap(), _Viewer_effectMargins = /* @__PURE__ */ new WeakMap(), _Viewer_flattenedNodes = /* @__PURE__ */ new WeakMap(), _Viewer_handleNodeClick = /* @__PURE__ */ new WeakMap(), _Viewer_getNodeById = /* @__PURE__ */ new WeakMap(), __decorate3([
      n5({
        type: Number,
        attribute: "zoom-margin"
      })
    ], Viewer.prototype, "zoomMargin", void 0), __decorate3([
      n5({
        type: String,
        attribute: "link"
      })
    ], Viewer.prototype, "link", void 0), Viewer;
  };
  function getCanvasSize(node) {
    let left = [], right = [], top = [], bottom = [];
    for (let child of node.children) {
      if (child.type !== "FRAME" && child.type !== "COMPONENT")
        continue;
      let { x: x2, y: y3, width, height } = child.absoluteBoundingBox;
      left.push(x2), right.push(x2 + width), top.push(y3), bottom.push(y3 + height);
    }
    let minX = Math.min(...left), minY = Math.min(...top);
    return {
      x: minX,
      y: minY,
      width: Math.abs(Math.max(...right) - minX),
      height: Math.abs(Math.min(...bottom) - minY)
    };
  }
  function getEffectMargin(container, nodes) {
    let points = nodes.map((node) => {
      if (!("effects" in node))
        return {
          top: node.absoluteBoundingBox.y,
          right: node.absoluteBoundingBox.x + node.absoluteBoundingBox.width,
          bottom: node.absoluteBoundingBox.y + node.absoluteBoundingBox.height,
          left: node.absoluteBoundingBox.x
        };
      let blurRadiuses = node.effects.filter((effect) => effect.visible && effect.type === "LAYER_BLUR").map((effect) => effect.radius), shadowMargins = node.effects.filter((effect) => effect.visible && effect.type === "DROP_SHADOW" && !!effect.offset).map((effect) => ({
        left: effect.radius - effect.offset.x,
        top: effect.radius - effect.offset.y,
        right: effect.radius + effect.offset.x,
        bottom: effect.radius + effect.offset.y
      })), margin = {
        top: Math.max(0, ...blurRadiuses, ...shadowMargins.map((margin2) => margin2.top)),
        right: Math.max(0, ...blurRadiuses, ...shadowMargins.map((margin2) => margin2.right)),
        bottom: Math.max(0, ...blurRadiuses, ...shadowMargins.map((margin2) => margin2.bottom)),
        left: Math.max(0, ...blurRadiuses, ...shadowMargins.map((margin2) => margin2.left))
      };
      return {
        top: node.absoluteBoundingBox.y - margin.top,
        right: node.absoluteBoundingBox.x + node.absoluteBoundingBox.width + margin.right,
        bottom: node.absoluteBoundingBox.y + node.absoluteBoundingBox.height + margin.bottom,
        left: node.absoluteBoundingBox.x - margin.left
      };
    }), bounds = {
      top: Math.min(...points.map((p2) => p2.top)),
      right: Math.max(...points.map((p2) => p2.right)),
      bottom: Math.max(...points.map((p2) => p2.bottom)),
      left: Math.min(...points.map((p2) => p2.left))
    };
    return {
      top: container.absoluteBoundingBox.y - bounds.top,
      right: bounds.right - container.absoluteBoundingBox.x - container.absoluteBoundingBox.width,
      bottom: bounds.bottom - container.absoluteBoundingBox.y - container.absoluteBoundingBox.height,
      left: container.absoluteBoundingBox.x - bounds.left
    };
  }
  function flattenNode(node, depth = 0) {
    return "absoluteBoundingBox" in node ? !("children" in node) || node.children.length === 0 ? [Object.assign(Object.assign({}, node), { depth })] : [
      Object.assign(Object.assign({}, node), { depth }),
      ...node.children.map((child) => flattenNode(child, depth + 1)).flat()
    ] : node.children.map((child) => flattenNode(child, depth + 1)).flat();
  }

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/FigspecFrameViewer.js
  var __decorate4 = function(decorators, target, key, desc) {
    var c3 = arguments.length, r4 = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") r4 = Reflect.decorate(decorators, target, key, desc);
    else for (var i7 = decorators.length - 1; i7 >= 0; i7--) (d3 = decorators[i7]) && (r4 = (c3 < 3 ? d3(r4) : c3 > 3 ? d3(target, key, r4) : d3(target, key)) || r4);
    return c3 > 3 && r4 && Object.defineProperty(target, key, r4), r4;
  }, FigspecFrameViewer = class extends ViewerMixin(s4) {
    constructor() {
      super(...arguments), this.nodes = null, this.renderedImage = null;
    }
    /** @private */
    get isMovable() {
      return !!(this.nodes && this.renderedImage && this.documentNode);
    }
    /**
     * Readonly. Document node (= root drawable node).
     * @readonly
     */
    get documentNode() {
      if (!this.nodes)
        return null;
      let documentNode = Object.values(this.nodes.nodes)[0];
      return !documentNode || !("absoluteBoundingBox" in documentNode.document) ? null : documentNode.document;
    }
    /** @private */
    get __images() {
      return !this.documentNode || !this.renderedImage ? {} : {
        [this.documentNode.id]: this.renderedImage
      };
    }
    /** @private */
    get error() {
      if (!this.nodes || !this.renderedImage)
        return ErrorMessage({
          title: "Parameter error",
          children: x`<span>
          Both <code>nodes</code> and <code>rendered-image</code> are required.
        </span>`
        });
      if (!this.documentNode)
        return ErrorMessage({
          title: "Parameter Error",
          children: x`
          <span> Document node is empty or does not have size. </span>
        `
        });
      if (super.error)
        return super.error;
    }
    getMetadata() {
      return {
        fileName: this.nodes.name,
        timestamp: this.nodes.lastModified,
        link: this.link
      };
    }
    connectedCallback() {
      super.connectedCallback(), this.documentNode && (this.__updateTree(this.documentNode), this.__updateEffectMargins(), this.resetZoom());
    }
    updated(changedProperties) {
      if (super.updated(changedProperties), changedProperties.has("nodes")) {
        if (!this.documentNode)
          return;
        this.__updateTree(this.documentNode), this.resetZoom();
      }
      changedProperties.has("renderedImage") && this.__updateEffectMargins();
    }
  };
  __decorate4([
    n5({
      type: Object
    })
  ], FigspecFrameViewer.prototype, "nodes", void 0);
  __decorate4([
    n5({
      type: String,
      attribute: "rendered-image"
    })
  ], FigspecFrameViewer.prototype, "renderedImage", void 0);

  // node_modules/@figspec/components/esm/es2015/FigspecViewer/FigspecFileViewer.js
  var __decorate5 = function(decorators, target, key, desc) {
    var c3 = arguments.length, r4 = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") r4 = Reflect.decorate(decorators, target, key, desc);
    else for (var i7 = decorators.length - 1; i7 >= 0; i7--) (d3 = decorators[i7]) && (r4 = (c3 < 3 ? d3(r4) : c3 > 3 ? d3(target, key, r4) : d3(target, key)) || r4);
    return c3 > 3 && r4 && Object.defineProperty(target, key, r4), r4;
  }, __classPrivateFieldGet3 = function(receiver, state, kind, f2) {
    if (kind === "a" && !f2) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state == "function" ? receiver !== state || !f2 : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f2 : kind === "a" ? f2.call(receiver) : f2 ? f2.value : state.get(receiver);
  }, _FigspecFileViewer_selectFirstPage, _FigspecFileViewer_handlePageChange, FigspecFileViewer = class extends ViewerMixin(s4) {
    constructor() {
      super(...arguments), this.documentNode = null, this.renderedImages = null, this.selectedPage = null, _FigspecFileViewer_selectFirstPage.set(this, () => {
        var _a;
        if (!this.documentNode) {
          this.selectedPage = null;
          return;
        }
        this.selectedPage = (_a = this.documentNode.document.children.filter((c3) => c3.type === "CANVAS")[0]) !== null && _a !== void 0 ? _a : null;
      }), _FigspecFileViewer_handlePageChange.set(this, (ev) => {
        var _a, _b;
        let target = ev.currentTarget;
        this.selectedPage = (_b = (_a = this.documentNode) === null || _a === void 0 ? void 0 : _a.document.children.find((c3) => c3.id === target.value)) !== null && _b !== void 0 ? _b : null, this.selectedPage && (this.__updateTree(this.selectedPage), this.resetZoom(), this.__updateEffectMargins(), this.panX = 0, this.panY = 0);
      });
    }
    /** @private */
    get isMovable() {
      return !!(this.renderedImages && this.documentNode);
    }
    /** @private */
    get __images() {
      return this.renderedImages || {};
    }
    /** @private */
    get error() {
      if (!this.documentNode || !this.renderedImages)
        return ErrorMessage({
          title: "Parameter error",
          children: x`<span>
          Both <code>document-node</code> and <code>rendered-images</code> are
          required.
        </span>`
        });
      if (super.error)
        return super.error;
    }
    static get styles() {
      return extendStyles(super.styles, [
        i`
        :host {
          --figspec-control-bg-default: #fcfcfc;
          --figspec-control-fg-default: #333;

          --control-bg: var(
            --figspec-control-bg,
            var(--figspec-control-bg-default)
          );
          --control-fg: var(
            --figspec-control-bg,
            var(--figspec-control-fg-default)
          );
          --control-shadow: var(
            --figspec-control-shadow,
            0 2px 4px rgba(0, 0, 0, 0.3)
          );
          --padding: var(--figspec-control-padding, 8px 16px);

          display: flex;
          flex-direction: column;
        }

        @media (prefers-color-scheme: dark) {
          :host {
            --figspec-control-bg-default: #222;
            --figspec-control-fg-default: #fff;
          }
        }

        .controls {
          flex-shrink: 0;
          padding: var(--padding);

          background-color: var(--control-bg);
          box-shadow: var(--control-shadow);
          color: var(--control-fg);
          z-index: 1;
        }

        .view {
          position: relative;
          flex-grow: 1;
          flex-shrink: 1;
        }
      `
      ]);
    }
    render() {
      var _a;
      return x`
      <div class="controls">
        <select @change=${__classPrivateFieldGet3(this, _FigspecFileViewer_handlePageChange, "f")}>
          ${(_a = this.documentNode) === null || _a === void 0 ? void 0 : _a.document.children.map((c3) => x`<option value=${c3.id}>${c3.name}</option>`)}
        </select>
      </div>

      <div class="view">${super.render()}</div>
    `;
    }
    getMetadata() {
      return {
        fileName: this.documentNode.name,
        timestamp: this.documentNode.lastModified,
        link: this.link
      };
    }
    connectedCallback() {
      super.connectedCallback(), this.documentNode && (__classPrivateFieldGet3(this, _FigspecFileViewer_selectFirstPage, "f").call(this), this.selectedPage && (this.__updateTree(this.selectedPage), this.resetZoom()));
    }
    updated(changedProperties) {
      super.updated(changedProperties), changedProperties.has("documentNode") && (__classPrivateFieldGet3(this, _FigspecFileViewer_selectFirstPage, "f").call(this), this.selectedPage && (this.__updateTree(this.selectedPage), this.resetZoom())), changedProperties.has("renderedImages") && this.__updateEffectMargins();
    }
  };
  _FigspecFileViewer_selectFirstPage = /* @__PURE__ */ new WeakMap(), _FigspecFileViewer_handlePageChange = /* @__PURE__ */ new WeakMap();
  __decorate5([
    n5({
      type: Object,
      attribute: "document-node"
    })
  ], FigspecFileViewer.prototype, "documentNode", void 0);
  __decorate5([
    n5({
      type: Object,
      attribute: "rendered-images"
    })
  ], FigspecFileViewer.prototype, "renderedImages", void 0);

  // node_modules/@figspec/components/esm/es2015/index.js
  customElements.get("figspec-file-viewer") || customElements.define("figspec-file-viewer", FigspecFileViewer);
  customElements.get("figspec-frame-viewer") || customElements.define("figspec-frame-viewer", FigspecFrameViewer);

  // node_modules/@lit-labs/react/create-component.js
  var t4 = /* @__PURE__ */ new Set(["children", "localName", "ref", "style", "className"]), e7 = /* @__PURE__ */ new WeakMap(), n8 = (t5, n9, s6, i7, o7) => {
    let l5 = o7?.[n9];
    l5 === void 0 || s6 === i7 ? s6 == null && n9 in HTMLElement.prototype ? t5.removeAttribute(n9) : t5[n9] = s6 : ((t6, n10, s7) => {
      let i8 = e7.get(t6);
      i8 === void 0 && e7.set(t6, i8 = /* @__PURE__ */ new Map());
      let o8 = i8.get(n10);
      s7 !== void 0 ? o8 === void 0 ? (i8.set(n10, o8 = { handleEvent: s7 }), t6.addEventListener(n10, o8)) : o8.handleEvent = s7 : o8 !== void 0 && (i8.delete(n10), t6.removeEventListener(n10, o8));
    })(t5, l5, s6);
  }, s5 = (t5, e8) => {
    typeof t5 == "function" ? t5(e8) : t5.current = e8;
  };
  function i6(e8 = window.React, i7, o7, l5, d3) {
    let a3, c3, r4;
    if (i7 === void 0) {
      let t5 = e8;
      ({ tagName: c3, elementClass: r4, events: l5, displayName: d3 } = t5), a3 = t5.react;
    } else a3 = e8, r4 = o7, c3 = i7;
    let h3 = a3.Component, u3 = a3.createElement, f2 = new Set(Object.keys(l5 ?? {}));
    class v2 extends h3 {
      constructor() {
        super(...arguments), this.o = null;
      }
      t(t5) {
        if (this.o !== null) for (let e9 in this.i) n8(this.o, e9, this.props[e9], t5 ? t5[e9] : void 0, l5);
      }
      componentDidMount() {
        var t5;
        this.t(), (t5 = this.o) === null || t5 === void 0 || t5.removeAttribute("defer-hydration");
      }
      componentDidUpdate(t5) {
        this.t(t5);
      }
      render() {
        let { _$Gl: e9, ...n9 } = this.props;
        this.h !== e9 && (this.u = (t5) => {
          e9 !== null && s5(e9, t5), this.o = t5, this.h = e9;
        }), this.i = {};
        let i8 = { ref: this.u };
        for (let [e10, s6] of Object.entries(n9)) t4.has(e10) ? i8[e10 === "className" ? "class" : e10] = s6 : f2.has(e10) || e10 in r4.prototype ? this.i[e10] = s6 : i8[e10] = s6;
        return i8.suppressHydrationWarning = !0, u3(c3, i8);
      }
    }
    v2.displayName = d3 ?? r4.name;
    let m2 = a3.forwardRef(((t5, e9) => u3(v2, { ...t5, _$Gl: e9 }, t5?.children)));
    return m2.displayName = v2.displayName, m2;
  }

  // node_modules/@figspec/react/esm/es2015/index.js
  var FigspecFrameViewer2 = i6(react_exports, "figspec-frame-viewer", FigspecFrameViewer, {
    onNodeSelect: "nodeselect",
    onPositionChange: "positionchange",
    onScaleChange: "scalechange"
  }), FigspecFileViewer2 = i6(react_exports, "figspec-file-viewer", FigspecFileViewer, {
    onNodeSelect: "nodeselect",
    onPositionChange: "positionchange",
    onScaleChange: "scalechange"
  });

  // global-externals:storybook/manager-api
  var manager_api_default = __STORYBOOK_API__, { ActiveTabs, Consumer, ManagerContext, Provider, RequestResponseError, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, experimental_MockUniversalStore, experimental_UniversalStore, experimental_getStatusStore, experimental_getTestProviderStore, experimental_requestResponse, experimental_useStatusStore, experimental_useTestProviderStore, experimental_useUniversalStore, internal_fullStatusStore, internal_fullTestProviderStore, internal_universalStatusStore, internal_universalTestProviderStore, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOK_API__;

  // global-externals:@storybook/icons
  var icons_default = __STORYBOOK_ICONS__, { AccessibilityAltIcon, AccessibilityIcon, AccessibilityIgnoredIcon, AddIcon, AdminIcon, AlertAltIcon, AlertIcon, AlignLeftIcon, AlignRightIcon, AppleIcon, ArrowBottomLeftIcon, ArrowBottomRightIcon, ArrowDownIcon, ArrowLeftIcon, ArrowRightIcon, ArrowSolidDownIcon, ArrowSolidLeftIcon, ArrowSolidRightIcon, ArrowSolidUpIcon, ArrowTopLeftIcon, ArrowTopRightIcon, ArrowUpIcon, AzureDevOpsIcon, BackIcon, BasketIcon, BatchAcceptIcon, BatchDenyIcon, BeakerIcon, BellIcon, BitbucketIcon, BoldIcon, BookIcon, BookmarkHollowIcon, BookmarkIcon, BottomBarIcon, BottomBarToggleIcon, BoxIcon, BranchIcon, BrowserIcon, ButtonIcon, CPUIcon, CalendarIcon, CameraIcon, CameraStabilizeIcon, CategoryIcon, CertificateIcon, ChangedIcon, ChatIcon, CheckIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronSmallDownIcon, ChevronSmallLeftIcon, ChevronSmallRightIcon, ChevronSmallUpIcon, ChevronUpIcon, ChromaticIcon, ChromeIcon, CircleHollowIcon, CircleIcon, ClearIcon, CloseAltIcon, CloseIcon: CloseIcon2, CloudHollowIcon, CloudIcon, CogIcon, CollapseIcon, CommandIcon, CommentAddIcon, CommentIcon, CommentsIcon, CommitIcon, CompassIcon, ComponentDrivenIcon, ComponentIcon, ContrastIcon, ContrastIgnoredIcon, ControlsIcon, CopyIcon: CopyIcon2, CreditIcon, CrossIcon, DashboardIcon, DatabaseIcon, DeleteIcon, DiamondIcon, DirectionIcon, DiscordIcon, DocChartIcon, DocListIcon, DocumentIcon, DownloadIcon, DragIcon, EditIcon, EllipsisIcon, EmailIcon, ExpandAltIcon, ExpandIcon, EyeCloseIcon, EyeIcon, FaceHappyIcon, FaceNeutralIcon, FaceSadIcon, FacebookIcon, FailedIcon, FastForwardIcon, FigmaIcon: FigmaIcon2, FilterIcon, FlagIcon, FolderIcon, FormIcon, GDriveIcon, GithubIcon, GitlabIcon, GlobeIcon, GoogleIcon, GraphBarIcon, GraphLineIcon, GraphqlIcon, GridAltIcon, GridIcon, GrowIcon, HeartHollowIcon, HeartIcon, HomeIcon, HourglassIcon, InfoIcon, ItalicIcon, JumpToIcon, KeyIcon, LightningIcon, LightningOffIcon, LinkBrokenIcon, LinkIcon, LinkedinIcon, LinuxIcon, ListOrderedIcon, ListUnorderedIcon, LocationIcon, LockIcon, MarkdownIcon, MarkupIcon, MediumIcon, MemoryIcon, MenuIcon, MergeIcon, MirrorIcon, MobileIcon, MoonIcon, NutIcon, OutboxIcon, OutlineIcon, PaintBrushIcon, PaperClipIcon, ParagraphIcon, PassedIcon, PhoneIcon, PhotoDragIcon, PhotoIcon, PhotoStabilizeIcon, PinAltIcon, PinIcon, PlayAllHollowIcon, PlayBackIcon, PlayHollowIcon, PlayIcon, PlayNextIcon, PlusIcon, PointerDefaultIcon, PointerHandIcon, PowerIcon, PrintIcon, ProceedIcon, ProfileIcon, PullRequestIcon, QuestionIcon, RSSIcon, RedirectIcon, ReduxIcon, RefreshIcon, ReplyIcon, RepoIcon, RequestChangeIcon, RewindIcon, RulerIcon, SaveIcon, SearchIcon, ShareAltIcon, ShareIcon, ShieldIcon, SideBySideIcon, SidebarAltIcon, SidebarAltToggleIcon, SidebarIcon, SidebarToggleIcon, SpeakerIcon, StackedIcon, StarHollowIcon, StarIcon, StatusFailIcon, StatusIcon, StatusPassIcon, StatusWarnIcon, StickerIcon, StopAltHollowIcon, StopAltIcon, StopIcon, StorybookIcon: StorybookIcon2, StructureIcon, SubtractIcon, SunIcon, SupportIcon, SweepIcon, SwitchAltIcon, SyncIcon, TabletIcon, ThumbsUpIcon, TimeIcon, TimerIcon, TransferIcon, TrashIcon, TwitterIcon, TypeIcon, UbuntuIcon, UndoIcon, UnfoldIcon, UnlockIcon, UnpinIcon, UploadIcon, UserAddIcon, UserAltIcon, UserIcon, UsersIcon, VSCodeIcon, VerifiedIcon, VideoIcon, WandIcon, WatchIcon, WindowsIcon, WrenchIcon, XIcon, YoutubeIcon, ZoomIcon, ZoomOutIcon, ZoomResetIcon, iconList } = __STORYBOOK_ICONS__;

  // node_modules/@storybook/addon-designs/dist/register-panel.mjs
  var Ce = Object.defineProperty, U = (e8, r4) => () => (e8 && (r4 = e8(e8 = 0)), r4), ke = (e8, r4) => {
    for (var o7 in r4) Ce(e8, o7, { get: r4[o7], enumerable: !0 });
  }, w2, Ie, Le, Ae, A3 = U(() => {
    w2 = ({ config: e8, defer: r4 = !1 }) => {
      let [o7, t5] = useState(r4 ? void 0 : e8.url), [n9, a3] = useState(!1);
      return useEffect(() => {
        if (!r4) return;
        let i7 = requestAnimationFrame(() => {
          t5(e8.url);
        });
        return () => cancelAnimationFrame(i7);
      }, [r4, e8.url]), useEffect(() => {
        a3(!1);
      }, [o7]), jsx("div", { css: Ie }, !n9 && jsx(Placeholder, { css: Le }, "Loading..."), jsx("iframe", { css: Ae, src: o7, allowFullScreen: e8.allowFullscreen, onLoad: () => a3(!0) }));
    }, Ie = css`
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  overflow: hidden;
`, Le = css`
  position: absolute;
  top: 50%;
  left: 50%;

  transform: translate(-50%, -50%);
`, Ae = css`
  position: relative;
  width: 100%;
  height: 100%;
  border: none;

  z-index: 1;
`;
  });
  function De(e8, r4) {
    let o7 = new URL(e8);
    o7.hostname = o7.hostname.replace(/^www\./, "embed."), o7.searchParams.delete("embed_origin"), o7.searchParams.set("embed-host", r4);
    for (let [t5, n9] of o7.searchParams) o7.searchParams.delete(t5), o7.searchParams.set(t5.replace(/_/g, "-"), n9);
    return o7.href;
  }
  var $2, Ue, q, Z2 = U(() => {
    A3(), $2 = /https:\/\/[\w.-]+\.?figma.com\/([\w-]+)\/([0-9a-zA-Z]{22,128})(?:\/.*)?$/, Ue = (e8) => $2.test(e8), q = ({ config: e8 }) => {
      let r4 = useMemo(() => Ue(e8.url) ? { url: De(e8.url, e8.embedHost || location.hostname), allowFullscreen: e8.allowFullscreen } : (console.warn(`[storybook-addon-designs] The URL you specified is not valid Figma URL.
The addon fallbacks to normal iframe mode.For more detail, please check <https://www.figma.com/developers/embed>.`), e8), [e8.url, e8.allowFullscreen, e8.embedHost]);
      return jsx(w2, { defer: !0, config: r4 });
    };
  }), fe = {};
  ke(fe, { Figspec: () => pe, default: () => ho });
  function M2(e8) {
    return e8.status !== 200 ? Promise.reject(e8.statusText) : e8.json();
  }
  function go(e8) {
    if (e8.accessToken) return e8.accessToken;
    try {
      return define_process_env_default.STORYBOOK_FIGMA_ACCESS_TOKEN ?? null;
    } catch {
      return null;
    }
  }
  function de(e8) {
    return "absoluteBoundingBox" in e8 ? [e8] : !e8.children || e8.children.length === 0 ? [] : e8.children.map(de).reduce((r4, o7) => r4.concat(o7), []);
  }
  var le, pe, ho, ue = U(() => {
    Z2(), le = css`
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
`, pe = ({ config: e8 }) => {
      let [r4, o7] = useState({ state: "loading" }), t5 = async (n9) => {
        o7({ state: "loading" });
        try {
          let a3 = e8.url.match($2);
          if (!a3) throw new Error(e8.url + " is not a valid Figma URL.");
          let [, , i7] = a3, g2 = new URL(e8.url).searchParams.get("node-id"), v2 = go(e8);
          if (!v2) throw new Error("Personal Access Token is required.");
          let m2 = { "X-FIGMA-TOKEN": v2 }, l5 = new URL(`https://api.figma.com/v1/files/${i7}`), s6 = new URL(`https://api.figma.com/v1/images/${i7}`);
          if (s6.searchParams.set("format", "svg"), !g2) {
            let b2 = await fetch(l5.href, { headers: m2, signal: n9 }).then((T2) => M2(T2)), ye = de(b2.document);
            s6.searchParams.set("ids", ye.map((T2) => T2.id).join(","));
            let we = await fetch(s6.href, { headers: m2, signal: n9 }).then((T2) => M2(T2));
            o7({ state: "fetched", value: { type: "file", props: { documentNode: b2, renderedImages: we.images, link: e8.url } } });
            return;
          }
          l5.pathname += "/nodes", l5.searchParams.set("ids", g2), s6.searchParams.set("ids", g2);
          let [f2, S3] = await Promise.all([fetch(l5.href, { headers: m2, signal: n9 }).then((b2) => M2(b2)), fetch(s6.href, { headers: m2, signal: n9 }).then((b2) => M2(b2))]);
          o7({ state: "fetched", value: { type: "frame", props: { nodes: f2, renderedImage: Object.values(S3.images)[0], link: e8.url } } });
        } catch (a3) {
          if (a3 instanceof DOMException && a3.code === DOMException.ABORT_ERR) return;
          console.error(a3), o7({ state: "failed", error: a3 instanceof Error ? a3.message : String(a3) });
        }
      };
      switch (useEffect(() => {
        let n9 = !1, a3 = () => {
          n9 = !0;
        }, i7 = new AbortController();
        return t5(i7.signal).then(a3, a3), () => {
          n9 || i7.abort();
        };
      }, [e8.url]), r4.state) {
        case "loading":
          return jsx(Placeholder, null, jsx(Fragment, null, "Loading Figma file..."));
        case "failed":
          return jsx(Placeholder, null, jsx(Fragment, null, "Failed to load Figma file"), jsx(Fragment, null, r4.error));
        case "fetched":
          return r4.value.type === "file" ? jsx(FigspecFileViewer2, { css: le, ...r4.value.props }) : jsx(FigspecFrameViewer2, { css: le, ...r4.value.props });
      }
    }, ho = pe;
  }), L2 = "STORYBOOK_ADDON_DESIGNS", D2 = L2 + "/panel", y2 = "design", E2 = class extends Component {
    state = { hasError: !1 };
    static getDerivedStateFromError(r4) {
      return { hasError: !0, error: r4 };
    }
    componentDidCatch(r4, o7) {
      console.group("An error occurred during rendering Addon panel of storybook-addon-designs"), console.log("--- Error ---"), console.error(r4), console.log("--- React Component Stack ---"), console.error(o7.componentStack), console.groupEnd();
    }
    render() {
      return this.state.hasError ? jsx(Placeholder, null, jsx(Fragment, null, "Failed to render addon UI"), jsx(Fragment, null, jsx("p", null, "Sorry, this addon has crashed due to the below error has thrown during rendering the addon UI."), jsx("pre", null, String(this.state.error)), jsx("p", null, "See console log for more details. To clear the error state, please reload the page.", " ", jsx(Link, { href: "https://github.com/storybookjs/addon-designs/issues/new?assignees=&labels=category%3A+bug&template=bug_report.yml", target: "_blank", rel: "noopener", withArrow: !0, cancel: !1 }, "Bug report")))) : this.props.children;
    }
  };
  Z2();
  A3();
  var Q = (e8, r4) => {
    let [o7, t5] = useState([0, 0]), [n9, a3] = useState(!1), i7 = useCallback((s6) => {
      s6.button === 0 && (t5([s6.screenX, s6.screenY]), a3(!0));
    }, [a3, t5]), d3 = useCallback((s6) => {
      let f2 = s6.touches[0];
      t5([f2.screenX, f2.screenY]), a3(!0);
    }, [a3, t5]), g2 = useCallback((s6) => {
      n9 && t5((f2) => (e8([s6[0] - f2[0], s6[1] - f2[1]]), s6));
    }, [t5, n9, ...r4]), v2 = useCallback((s6) => {
      let { screenX: f2, screenY: S3 } = s6;
      g2([f2, S3]);
    }, [g2]), m2 = useCallback((s6) => {
      let { screenX: f2, screenY: S3 } = s6.touches[0];
      g2([f2, S3]);
    }, [t5, n9, ...r4]), l5 = useCallback(() => {
      t5([0, 0]), a3(!1);
    }, [a3, t5]);
    return { onMouseDown: i7, onMouseMove: v2, onMouseUp: l5, onMouseLeave: l5, onTouchStart: d3, onTouchMove: m2, onTouchCancel: l5, onTouchEnd: l5 };
  }, ee = ({ children: e8, className: r4, style: o7, defaultValue: t5, value: n9, onChange: a3 }) => {
    let [i7, d3] = useState([0, 0]);
    useEffect(() => {
      d3(t5 || n9 || [0, 0]);
    }, [t5]);
    let g2 = Q((m2) => {
      a3 && a3(m2), d3((l5) => [l5[0] + m2[0], l5[1] + m2[1]]);
    }, [d3, a3]), v2 = useMemo(() => {
      let m2 = n9 || i7;
      return { transform: `translate(${m2[0]}px, ${m2[1]}px)` };
    }, [n9, i7]);
    return jsx("div", { css: Ze, className: r4, style: o7, ...g2 }, jsx("div", { css: _e, style: v2 }, e8));
  }, Ze = css`
  position: relative;
  overflow: hidden;

  &:active {
    cursor: move;
  }
`, _e = css`
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
`, oe = ({ onZoomIn: e8, onZoomOut: r4, onReset: o7 }) => jsx(Fragment, null, jsx(IconButton, { onClick: e8 }, jsx(ZoomIcon, null)), jsx(IconButton, { onClick: r4 }, jsx(ZoomOutIcon, null)), jsx(IconButton, { onClick: o7 }, jsx(ZoomResetIcon, null))), re = (e8, r4) => {
    let [o7, t5] = useState(1);
    useEffect(() => {
      t5(e8);
    }, r4);
    let n9 = useCallback(() => {
      t5((d3) => d3 + 0.1);
    }, [t5]), a3 = useCallback(() => {
      t5((d3) => Math.max(d3 - 0.1, 0.1));
    }, [t5]), i7 = useCallback(() => {
      t5(1);
    }, [t5]);
    return { scale: o7, zoomIn: n9, zoomOut: a3, resetZoom: i7 };
  }, te = ({ config: e8 }) => {
    let r4 = re(e8.scale || 1, [e8.scale]), o7 = useMemo(() => ({ transform: `scale(${r4.scale})` }), [r4.scale]);
    return jsx("div", { css: Qe }, jsx(FlexBar, { border: !0 }, jsx("div", { style: { display: "grid", gridAutoFlow: "column", gap: "4px", alignItems: "center" } }, jsx(Fragment, { key: "left" }, jsx("p", null, jsx("b", null, "Image")), jsx(Separator, null), jsx(oe, { onReset: r4.resetZoom, onZoomIn: r4.zoomIn, onZoomOut: r4.zoomOut })))), jsx(ee, { css: xe, defaultValue: e8.offset }, jsx("img", { css: je, src: e8.url, style: o7 })));
  }, Qe = css`
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: stretch;
`, xe = css`
  flex-grow: 1;
`, je = css`
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;

  pointer-events: none;
  border-radius: 1px;
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);
`, ae = ({ config: e8 }) => jsx("div", { css: ro }, jsx(Link, { cancel: !1, href: e8.url, target: e8.target ?? "_blank", rel: e8.rel ?? "noopener", withArrow: e8.showArrow ?? !0 }, e8.label || e8.url)), ro = css`
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
`;
  A3();
  var ao = (e8) => {
    if (e8.protocol !== "https:") return { valid: !1, error: jsx(Fragment, null, "Expected HTTPS link, received ", jsx("code", null, e8.protocol), ".") };
    if (e8.hostname !== "www.sketch.com") return { valid: !1, error: jsx(Fragment, null, "Expected a hostname ", jsx("code", null, "www.sketch.com"), ", received", " ", jsx("code", null, e8.hostname)) };
    let r4 = jsx(Fragment, null, "Expected pathname ", jsx("code", null, "/s/<string>/a/<string>"), ", received", " ", jsx("code", null, e8.pathname), "."), o7 = e8.pathname.split("/").slice(1);
    if (o7.length < 4) return { valid: !1, error: r4 };
    if (o7[0] === "embed") return { valid: !0, data: { url: e8.href, offscreen: !1 } };
    let [t5, n9, a3, i7] = o7;
    return t5 !== "s" || !n9 || a3 !== "a" || !i7 ? { valid: !1, error: r4 } : { valid: !0, data: { url: `https://www.sketch.com/embed/s/${n9}/a/${i7}`, offscreen: !1 } };
  }, se = ({ config: e8 }) => {
    let r4 = useMemo(() => {
      let o7 = ao(new URL(e8.url));
      return o7.valid ? { ...o7, data: { ...e8, ...o7.data } } : o7;
    }, [e8]);
    return r4.valid ? jsx(w2, { defer: !0, config: r4.data }) : jsx(Placeholder, null, jsx(Fragment, null, "Invalid Sketch URL"), jsx(Fragment, null, r4.error));
  }, ce = ({ tabs: e8, deps: r4 = [] }) => {
    let [o7, t5] = useState(e8[0].id);
    return useEffect(() => {
      t5(e8[0].id);
    }, r4), jsx(Tabs, { absolute: !0, selected: o7, actions: { onSelect: t5 } }, e8.map((n9) => jsx("div", { key: n9.id, id: n9.id, title: n9.name }, n9.offscreen || o7 === n9.id ? n9.content : null)));
  }, vo = lazy(() => Promise.resolve().then(() => (ue(), fe))), Pe = ({ config: e8 }) => {
    if (!e8 || "length" in e8 && e8.length === 0) return jsx(Placeholder, null, jsx(Fragment, null, "No designs found"), jsx(Fragment, null, "Learn how to", " ", jsx(Link, { href: "https://github.com/storybookjs/addon-designs#3-add-it-to-story", target: "_blank", rel: "noopener", withArrow: !0, cancel: !1 }, "display design preview for the story")));
    let r4 = [...e8 instanceof Array ? e8 : [e8]].map((o7) => {
      let t5 = { id: JSON.stringify(o7), name: o7.name || o7.type?.toUpperCase() || "ERROR", offscreen: o7.offscreen ?? !0 };
      switch (o7.type) {
        case "iframe":
          return { ...t5, content: jsx(w2, { config: o7 }) };
        case "figma":
          return { ...t5, content: jsx(q, { config: o7 }), offscreen: !1 };
        case "sketch":
          return { ...t5, content: jsx(se, { config: o7 }) };
        case "figspec":
        case "experimental-figspec":
          return o7.type === "experimental-figspec" && console.warn("[storybook-addon-designs] `experimental-figspec` is deprecated. We will remove it in v7.0. Please replace it to `figspec` type."), { ...t5, content: jsx(Suspense, { fallback: "Preparing Figspec viewer..." }, jsx(vo, { config: o7 })), offscreen: !1 };
        case "image":
          return { ...t5, content: jsx(te, { config: o7 }) };
        case "link":
          return { ...t5, content: jsx(ae, { config: o7 }) };
      }
      return { ...t5, content: jsx(Placeholder, null, jsx(Fragment, null, "Invalid config type"), jsx(Fragment, null, "Config type you set is not supported. Please choose one from", " ", jsx(Link, { href: "https://github.com/storybookjs/addon-designs/blob/master/packages/storybook-addon-designs/src/config.ts", target: "_blank", rel: "noopener", withArrow: !0, cancel: !1 }, "available config types"))) };
    });
    return r4.length === 1 ? jsx("div", null, r4[0].content) : jsx(ce, { tabs: r4, deps: [e8] });
  }, K = ({ active: e8 }) => {
    let r4 = useStorybookState(), o7 = useParameter(y2), [t5, n9] = useState(e8);
    return useEffect(() => {
      n9(e8);
    }, [o7]), useEffect(() => {
      e8 && n9(!0);
    }, [e8]), t5 ? jsx(Pe, { key: r4.storyId, config: o7 }) : null;
  }, I2 = "Design";
  function be(e8) {
    addons.register(L2, (r4) => {
      let o7 = function() {
        let t5 = useParameter(y2);
        return t5 ? Array.isArray(t5) ? t5.length > 0 ? `${I2} (${t5.length})` : I2 : (t5.name || I2) + " (1)" : I2;
      };
      addons.add(D2, { type: types.PANEL, title: o7, paramKey: y2, render({ active: t5 }) {
        return jsx(AddonPanel, { active: !!t5 }, jsx(E2, null, jsx(K, { active: !!t5 })));
      } });
    });
  }
  be();
})();
}catch(e){ console.error("[Storybook] One of your manager-entries failed: " + import.meta.url, e); }
